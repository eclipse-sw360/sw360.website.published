<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Eclipse SW360 – Development</title>
    <link>https://www.eclipse.org/sw360/docs/development/</link>
    <description>Recent content in Development on Eclipse SW360</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="https://www.eclipse.org/sw360/docs/development/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: SW360 RESTful API</title>
      <link>https://www.eclipse.org/sw360/docs/development/restapi/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.eclipse.org/sw360/docs/development/restapi/</guid>
      <description>
        
        
        &lt;p&gt;Using the Web interface makes sense for some use cases, for some other cases the tool integration is more useful. The SW360 software offers a RESTful API. It has been initially developed by a colleague of the BT division - an excellent example of how Inner Source works for projects. Now it has been integrated to the official main project as component that can be deployed along with a SW360 solution.&lt;/p&gt;
&lt;h2 id=&#34;methods-of-authentication&#34;&gt;Methods of Authentication&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;OAuth workflow involving consumer / client secret and user token using user name and password from LDAP / Exchange accounts (very early)&lt;/li&gt;
&lt;li&gt;Access key obtained in the SW360 UI&lt;/li&gt;
&lt;li&gt;OAuth workflow involving consumer token / client secret and signed Java Web Tokens involving user authentication from OpenID Connect service for the first token and then using the OAuth refresh tokens.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;API Documentation is available on the instances deployed:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;https://&amp;lt;my_sw360_server&amp;gt;/resource/docs/api-guide.html&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;brief-specs&#34;&gt;Brief Specs&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Implementation Technology&lt;/td&gt;
&lt;td&gt;Java-based Spring-framework based&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;REST Flavor&lt;/td&gt;
&lt;td&gt;Hypermedia-driven&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Authentication&lt;/td&gt;
&lt;td&gt;Now: Token by user token store. Previously: Spring Security using JWT and SW360 user management. Note that technically, both ways are possible&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;More Technical Information&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://www.eclipse.org/sw360/docs/development/restapi/dev-rest-api/&#34; title=&#34;Rest API&#34;&gt;Rest API&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Test Cases</title>
      <link>https://www.eclipse.org/sw360/docs/development/testcases/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.eclipse.org/sw360/docs/development/testcases/</guid>
      <description>
        
        
        
      </description>
    </item>
    
    <item>
      <title>Docs: How to add a backend portlet to sw360</title>
      <link>https://www.eclipse.org/sw360/docs/development/dev-adding-a-new-portlet-backend/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.eclipse.org/sw360/docs/development/dev-adding-a-new-portlet-backend/</guid>
      <description>
        
        
        &lt;p&gt;This page how to add some operations / service calls on the backend for the portlet writing on the page that covers the front end. Note that this page does not create a new (thrift service), but just explains how to add more operations.&lt;/p&gt;
&lt;p&gt;This explanation follows bottom up approach where we first add the backend methods and then call them later in the frontend. Quick summary:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Add methods to the thrift idl definition&lt;/li&gt;
&lt;li&gt;Add methods to the data handler interface&lt;/li&gt;
&lt;li&gt;Add implementation&lt;/li&gt;
&lt;li&gt;Add tests&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;thrift&#34;&gt;Thrift&lt;/h4&gt;
&lt;p&gt;First we add some methods to the thrift files, components.thrift&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;//new Methods to ensure uniqueness of Identifiers
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;&lt;/span&gt;map &lt;span style=&#34;color:#555&#34;&gt;&amp;lt;&lt;/span&gt;string&lt;span style=&#34;color:#555&#34;&gt;,&lt;/span&gt; list&lt;span style=&#34;color:#555&#34;&gt;&amp;lt;&lt;/span&gt;string&lt;span style=&#34;color:#555&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#c0f&#34;&gt;getDuplicateComponents&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;map &lt;span style=&#34;color:#555&#34;&gt;&amp;lt;&lt;/span&gt;string&lt;span style=&#34;color:#555&#34;&gt;,&lt;/span&gt; list&lt;span style=&#34;color:#555&#34;&gt;&amp;lt;&lt;/span&gt;string&lt;span style=&#34;color:#555&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#c0f&#34;&gt;getDuplicateReleases&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;datahandler&#34;&gt;Datahandler&lt;/h4&gt;
&lt;p&gt;then we install lib-datahandler. That way we see which methods we have to implement.
We have chosen to change the interface of the ComponentService. That means we need to implement them in the ComponentHandler.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#99f&#34;&gt;@Override&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;public&lt;/span&gt; Map&lt;span style=&#34;color:#555&#34;&gt;&amp;lt;&lt;/span&gt;String&lt;span style=&#34;color:#555&#34;&gt;,&lt;/span&gt; List&lt;span style=&#34;color:#555&#34;&gt;&amp;lt;&lt;/span&gt;String&lt;span style=&#34;color:#555&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#c0f&#34;&gt;getDuplicateComponents&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;throws&lt;/span&gt; TException &lt;span style=&#34;color:#555&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;return&lt;/span&gt; handler&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#309&#34;&gt;getDuplicateComponents&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#555&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#99f&#34;&gt;@Override&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;public&lt;/span&gt; Map&lt;span style=&#34;color:#555&#34;&gt;&amp;lt;&lt;/span&gt;String&lt;span style=&#34;color:#555&#34;&gt;,&lt;/span&gt; List&lt;span style=&#34;color:#555&#34;&gt;&amp;lt;&lt;/span&gt;String&lt;span style=&#34;color:#555&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#c0f&#34;&gt;getDuplicateReleases&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;throws&lt;/span&gt; TException &lt;span style=&#34;color:#555&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;return&lt;/span&gt; handler&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#309&#34;&gt;getDuplicateReleases&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#555&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;implementation&#34;&gt;Implementation&lt;/h4&gt;
&lt;p&gt;The methods there are only a reference to the ComponentDatabaseHandler.java.
In the ComponentHandler we only assert that the input is correct.
Since we implement methods without parameters, there is nothing else for us to do.
In the ComponentDatabaseHandler.java we actually do some work and implement the methods&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;public&lt;/span&gt; Map&lt;span style=&#34;color:#555&#34;&gt;&amp;lt;&lt;/span&gt;String&lt;span style=&#34;color:#555&#34;&gt;,&lt;/span&gt; List&lt;span style=&#34;color:#555&#34;&gt;&amp;lt;&lt;/span&gt;String&lt;span style=&#34;color:#555&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#c0f&#34;&gt;getDuplicateComponents&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#555&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ListMultimap&lt;span style=&#34;color:#555&#34;&gt;&amp;lt;&lt;/span&gt;String&lt;span style=&#34;color:#555&#34;&gt;,&lt;/span&gt; String&lt;span style=&#34;color:#555&#34;&gt;&amp;gt;&lt;/span&gt; componentIdentifierToComponentId &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; ArrayListMultimap&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#309&#34;&gt;create&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#555&#34;&gt;(&lt;/span&gt;Component component &lt;span style=&#34;color:#555&#34;&gt;:&lt;/span&gt; componentRepository&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#309&#34;&gt;getSummaryForExport&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;())&lt;/span&gt; &lt;span style=&#34;color:#555&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        componentIdentifierToComponentId&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#309&#34;&gt;put&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;(&lt;/span&gt;SW360Utils&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#309&#34;&gt;printName&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;(&lt;/span&gt;component&lt;span style=&#34;color:#555&#34;&gt;),&lt;/span&gt; component&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#309&#34;&gt;getId&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;());&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#555&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;return&lt;/span&gt; CommonUtils&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#309&#34;&gt;getIdentifierToListOfDuplicates&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;(&lt;/span&gt;componentIdentifierToComponentId&lt;span style=&#34;color:#555&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#555&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;public&lt;/span&gt; Map&lt;span style=&#34;color:#555&#34;&gt;&amp;lt;&lt;/span&gt;String&lt;span style=&#34;color:#555&#34;&gt;,&lt;/span&gt; List&lt;span style=&#34;color:#555&#34;&gt;&amp;lt;&lt;/span&gt;String&lt;span style=&#34;color:#555&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#c0f&#34;&gt;getDuplicateReleases&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#555&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ListMultimap&lt;span style=&#34;color:#555&#34;&gt;&amp;lt;&lt;/span&gt;String&lt;span style=&#34;color:#555&#34;&gt;,&lt;/span&gt; String&lt;span style=&#34;color:#555&#34;&gt;&amp;gt;&lt;/span&gt; releaseIdentifierToReleaseId &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; ArrayListMultimap&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#309&#34;&gt;create&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#555&#34;&gt;(&lt;/span&gt;Release release &lt;span style=&#34;color:#555&#34;&gt;:&lt;/span&gt; releaseRepository&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#309&#34;&gt;getReleaseSummary&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;())&lt;/span&gt; &lt;span style=&#34;color:#555&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        releaseIdentifierToReleaseId&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#309&#34;&gt;put&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;(&lt;/span&gt;SW360Utils&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#309&#34;&gt;printName&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;(&lt;/span&gt;release&lt;span style=&#34;color:#555&#34;&gt;),&lt;/span&gt; release&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#309&#34;&gt;getId&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;());&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#555&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;return&lt;/span&gt; CommonUtils&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#309&#34;&gt;getIdentifierToListOfDuplicates&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;(&lt;/span&gt;releaseIdentifierToReleaseId&lt;span style=&#34;color:#555&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#555&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;tests&#34;&gt;Tests&lt;/h4&gt;
&lt;p&gt;We then write some tests in ComponentDatabaseHandlerTest.java&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#99f&#34;&gt;@Test&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#078;font-weight:bold&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#c0f&#34;&gt;testDuplicateComponentIsFound&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;throws&lt;/span&gt; Exception &lt;span style=&#34;color:#555&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    String originalComponentId &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;C3&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;final&lt;/span&gt; Component tmp &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; handler&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#309&#34;&gt;getComponent&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;(&lt;/span&gt;originalComponentId&lt;span style=&#34;color:#555&#34;&gt;,&lt;/span&gt; user1&lt;span style=&#34;color:#555&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    tmp&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#309&#34;&gt;unsetId&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    tmp&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#309&#34;&gt;unsetRevision&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    String newComponentId &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; handler&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#309&#34;&gt;addComponent&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;(&lt;/span&gt;tmp&lt;span style=&#34;color:#555&#34;&gt;,&lt;/span&gt; email1&lt;span style=&#34;color:#555&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;final&lt;/span&gt; Map&lt;span style=&#34;color:#555&#34;&gt;&amp;lt;&lt;/span&gt;String&lt;span style=&#34;color:#555&#34;&gt;,&lt;/span&gt; List&lt;span style=&#34;color:#555&#34;&gt;&amp;lt;&lt;/span&gt;String&lt;span style=&#34;color:#555&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; duplicateComponents &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; handler&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#309&#34;&gt;getDuplicateComponents&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    assertThat&lt;span style=&#34;color:#555&#34;&gt;(&lt;/span&gt;duplicateComponents&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#309&#34;&gt;size&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;(),&lt;/span&gt; is&lt;span style=&#34;color:#555&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f60&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    assertThat&lt;span style=&#34;color:#555&#34;&gt;(&lt;/span&gt;duplicateComponents&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#309&#34;&gt;get&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;(&lt;/span&gt;printName&lt;span style=&#34;color:#555&#34;&gt;(&lt;/span&gt;tmp&lt;span style=&#34;color:#555&#34;&gt;)),&lt;/span&gt; containsInAnyOrder&lt;span style=&#34;color:#555&#34;&gt;(&lt;/span&gt;newComponentId&lt;span style=&#34;color:#555&#34;&gt;,&lt;/span&gt;originalComponentId&lt;span style=&#34;color:#555&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#555&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#99f&#34;&gt;@Test&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#078;font-weight:bold&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#c0f&#34;&gt;testDuplicateReleaseIsFound&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;throws&lt;/span&gt; Exception &lt;span style=&#34;color:#555&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    String originalReleaseId &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;R1A&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;final&lt;/span&gt; Release tmp &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; handler&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#309&#34;&gt;getRelease&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;(&lt;/span&gt;originalReleaseId&lt;span style=&#34;color:#555&#34;&gt;,&lt;/span&gt; user1&lt;span style=&#34;color:#555&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    tmp&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#309&#34;&gt;unsetId&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    tmp&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#309&#34;&gt;unsetRevision&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    String newReleaseId &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; handler&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#309&#34;&gt;addRelease&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;(&lt;/span&gt;tmp&lt;span style=&#34;color:#555&#34;&gt;,&lt;/span&gt; email1&lt;span style=&#34;color:#555&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;final&lt;/span&gt; Map&lt;span style=&#34;color:#555&#34;&gt;&amp;lt;&lt;/span&gt;String&lt;span style=&#34;color:#555&#34;&gt;,&lt;/span&gt; List&lt;span style=&#34;color:#555&#34;&gt;&amp;lt;&lt;/span&gt;String&lt;span style=&#34;color:#555&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; duplicateReleases &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; handler&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#309&#34;&gt;getDuplicateReleases&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    assertThat&lt;span style=&#34;color:#555&#34;&gt;(&lt;/span&gt;duplicateReleases&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#309&#34;&gt;size&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;(),&lt;/span&gt; is&lt;span style=&#34;color:#555&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f60&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    assertThat&lt;span style=&#34;color:#555&#34;&gt;(&lt;/span&gt;duplicateReleases&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#309&#34;&gt;get&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;(&lt;/span&gt;printName&lt;span style=&#34;color:#555&#34;&gt;(&lt;/span&gt;tmp&lt;span style=&#34;color:#555&#34;&gt;)),&lt;/span&gt; containsInAnyOrder&lt;span style=&#34;color:#555&#34;&gt;(&lt;/span&gt;newReleaseId&lt;span style=&#34;color:#555&#34;&gt;,&lt;/span&gt;originalReleaseId&lt;span style=&#34;color:#555&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#555&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Then we install the backend to make our methods available.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: How to add a frontend portlet to sw360</title>
      <link>https://www.eclipse.org/sw360/docs/development/dev-adding-a-new-portlet-frontend/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.eclipse.org/sw360/docs/development/dev-adding-a-new-portlet-frontend/</guid>
      <description>
        
        
        &lt;p&gt;We create a class in&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sw360/src/frontend/sw360-portlets/src/main/java/com/siemens/sw360/portal/portlets/admin/
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;called&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;DatabaseSanitation.java
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Here are some code snippets that are important:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#0a8;font-weight:bold&#34;&gt;DatabaseSanitation&lt;/span&gt; &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;extends&lt;/span&gt; Sw360Portlet 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;the base class Sw360Portlet adds some convenience methods to render the most common return values of functions into messages.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#99f&#34;&gt;@Override&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#078;font-weight:bold&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#c0f&#34;&gt;doView&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;(&lt;/span&gt;RenderRequest request&lt;span style=&#34;color:#555&#34;&gt;,&lt;/span&gt; RenderResponse response&lt;span style=&#34;color:#555&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;throws&lt;/span&gt; IOException&lt;span style=&#34;color:#555&#34;&gt;,&lt;/span&gt; PortletException &lt;span style=&#34;color:#555&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;// Proceed with page rendering
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;super&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#309&#34;&gt;doView&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;(&lt;/span&gt;request&lt;span style=&#34;color:#555&#34;&gt;,&lt;/span&gt; response&lt;span style=&#34;color:#555&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#555&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This method is used to render different pages, a common pattern would be to have if/else tree like&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;//! VIEW and helpers
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#99f&#34;&gt;@Override&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#078;font-weight:bold&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#c0f&#34;&gt;doView&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;(&lt;/span&gt;RenderRequest request&lt;span style=&#34;color:#555&#34;&gt;,&lt;/span&gt; RenderResponse response&lt;span style=&#34;color:#555&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;throws&lt;/span&gt; IOException&lt;span style=&#34;color:#555&#34;&gt;,&lt;/span&gt; PortletException &lt;span style=&#34;color:#555&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    String pageName &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; request&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#309&#34;&gt;getParameter&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;(&lt;/span&gt;PAGENAME&lt;span style=&#34;color:#555&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#555&#34;&gt;(&lt;/span&gt;PAGENAME_EDIT&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#309&#34;&gt;equals&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;(&lt;/span&gt;pageName&lt;span style=&#34;color:#555&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#555&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        prepareVendorEdit&lt;span style=&#34;color:#555&#34;&gt;(&lt;/span&gt;request&lt;span style=&#34;color:#555&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        include&lt;span style=&#34;color:#555&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;/html/vendors/edit.jsp&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;,&lt;/span&gt; request&lt;span style=&#34;color:#555&#34;&gt;,&lt;/span&gt; response&lt;span style=&#34;color:#555&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#555&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#555&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        prepareStandardView&lt;span style=&#34;color:#555&#34;&gt;(&lt;/span&gt;request&lt;span style=&#34;color:#555&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;super&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#309&#34;&gt;doView&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;(&lt;/span&gt;request&lt;span style=&#34;color:#555&#34;&gt;,&lt;/span&gt; response&lt;span style=&#34;color:#555&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#555&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#555&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;but since we only have one page this is all we need. The jsp that is rendered by super.doView is set in&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sw360&lt;span style=&#34;color:#555&#34;&gt;/&lt;/span&gt;src&lt;span style=&#34;color:#555&#34;&gt;/&lt;/span&gt;frontend&lt;span style=&#34;color:#555&#34;&gt;/&lt;/span&gt;sw360&lt;span style=&#34;color:#555&#34;&gt;-&lt;/span&gt;portlets&lt;span style=&#34;color:#555&#34;&gt;/&lt;/span&gt;src&lt;span style=&#34;color:#555&#34;&gt;/&lt;/span&gt;main&lt;span style=&#34;color:#555&#34;&gt;/&lt;/span&gt;webapp&lt;span style=&#34;color:#555&#34;&gt;/&lt;/span&gt;WEB&lt;span style=&#34;color:#555&#34;&gt;-&lt;/span&gt;INF&lt;span style=&#34;color:#555&#34;&gt;/&lt;/span&gt;portlet&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#309&#34;&gt;xml&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;but more on that later.&lt;/p&gt;
&lt;p&gt;The next method in DatabaseSanitation handles resource requests, which are responses to AJAX calls:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;@Override
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;public void serveResource(ResourceRequest request, ResourceResponse response) throws IOException, PortletException {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    String action = request.getParameter(PortalConstants.ACTION);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    if (PortalConstants.DUPLICATES.equals(action)) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              serveDuplicates(request, response);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;similar to the PAGENAME tree, here we have an ACTION if/else block. We only have one action, so this is simple.&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s have a look at&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#078;font-weight:bold&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#c0f&#34;&gt;serveDuplicates&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;(&lt;/span&gt;ResourceRequest request&lt;span style=&#34;color:#555&#34;&gt;,&lt;/span&gt; ResourceResponse response&lt;span style=&#34;color:#555&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;throws&lt;/span&gt; IOException&lt;span style=&#34;color:#555&#34;&gt;,&lt;/span&gt; PortletException &lt;span style=&#34;color:#555&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Map&lt;span style=&#34;color:#555&#34;&gt;&amp;lt;&lt;/span&gt;String&lt;span style=&#34;color:#555&#34;&gt;,&lt;/span&gt; List&lt;span style=&#34;color:#555&#34;&gt;&amp;lt;&lt;/span&gt;String&lt;span style=&#34;color:#555&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; duplicateComponents&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Map&lt;span style=&#34;color:#555&#34;&gt;&amp;lt;&lt;/span&gt;String&lt;span style=&#34;color:#555&#34;&gt;,&lt;/span&gt; List&lt;span style=&#34;color:#555&#34;&gt;&amp;lt;&lt;/span&gt;String&lt;span style=&#34;color:#555&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; duplicateReleases&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;try&lt;/span&gt; &lt;span style=&#34;color:#555&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;final&lt;/span&gt; ComponentService&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#309&#34;&gt;Iface&lt;/span&gt; componentClient &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; thriftClients&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#309&#34;&gt;makeComponentClient&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        duplicateComponents &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; componentClient&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#309&#34;&gt;getDuplicateComponents&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        duplicateReleases &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; componentClient&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#309&#34;&gt;getDuplicateReleases&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#555&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;catch&lt;/span&gt; &lt;span style=&#34;color:#555&#34;&gt;(&lt;/span&gt;TException e&lt;span style=&#34;color:#555&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#555&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        log&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#309&#34;&gt;error&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;Error in component client&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;,&lt;/span&gt; e&lt;span style=&#34;color:#555&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#555&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;(&lt;/span&gt;duplicateComponents&lt;span style=&#34;color:#555&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;null&lt;/span&gt; &lt;span style=&#34;color:#555&#34;&gt;||&lt;/span&gt; duplicateReleases&lt;span style=&#34;color:#555&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#555&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        renderRequestStatus&lt;span style=&#34;color:#555&#34;&gt;(&lt;/span&gt;request&lt;span style=&#34;color:#555&#34;&gt;,&lt;/span&gt;response&lt;span style=&#34;color:#555&#34;&gt;,&lt;/span&gt; RequestStatus&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#309&#34;&gt;FAILURE&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#555&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;(&lt;/span&gt;duplicateComponents&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#309&#34;&gt;isEmpty&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;()&lt;/span&gt;  &lt;span style=&#34;color:#555&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; duplicateReleases&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#309&#34;&gt;isEmpty&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;())&lt;/span&gt; &lt;span style=&#34;color:#555&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        renderRequestStatus&lt;span style=&#34;color:#555&#34;&gt;(&lt;/span&gt;request&lt;span style=&#34;color:#555&#34;&gt;,&lt;/span&gt;response&lt;span style=&#34;color:#555&#34;&gt;,&lt;/span&gt; RequestStatus&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#309&#34;&gt;SUCCESS&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#555&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#555&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        request&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#309&#34;&gt;setAttribute&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;(&lt;/span&gt;PortalConstants&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#309&#34;&gt;DUPLICATE_RELEASES&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;,&lt;/span&gt; duplicateReleases&lt;span style=&#34;color:#555&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        request&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#309&#34;&gt;setAttribute&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;(&lt;/span&gt;PortalConstants&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#309&#34;&gt;DUPLICATE_COMPONENTS&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;,&lt;/span&gt; duplicateComponents&lt;span style=&#34;color:#555&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        include&lt;span style=&#34;color:#555&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;/html/admin/databaseSanitation/duplicatesAjax.jsp&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;,&lt;/span&gt; request&lt;span style=&#34;color:#555&#34;&gt;,&lt;/span&gt; response&lt;span style=&#34;color:#555&#34;&gt;,&lt;/span&gt; PortletRequest&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#309&#34;&gt;RESOURCE_PHASE&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#555&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#555&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The member variable thriftClients is inherited from the Sw360Portlet. This is how we talk to the backend.
We call the methods that we wrote in the first part of the tutorial.
The error handling is reported with renderRequestStatus, also from Sw360Portlet.
When we have findings then we report them by rendering a jsp in the RESOURCE_PHASE.
This is then some html that our AJAX function gets as data.&lt;/p&gt;
&lt;p&gt;Then we have to register the portlets in some xml files:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sw360/src/frontend/sw360-portlets/src/main/webapp/WEB-INF/liferay-display.xml
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;portlet&lt;/span&gt; &lt;span style=&#34;color:#309&#34;&gt;id=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;databaseSanitation&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sw360/src/frontend/sw360-portlets/src/main/webapp/WEB-INF/liferay-portlet.xml
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;portlet&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;portlet-name&amp;gt;&lt;/span&gt;databaseSanitation&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/portlet-name&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;icon&amp;gt;&lt;/span&gt;/icon.png&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/icon&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;instanceable&amp;gt;&lt;/span&gt;false&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/instanceable&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;header-portlet-css&amp;gt;&lt;/span&gt;/css/main.css&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/header-portlet-css&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;header-portlet-javascript&amp;gt;&lt;/span&gt;/js/main.js&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/header-portlet-javascript&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;header-portlet-javascript&amp;gt;&lt;/span&gt;/js/external/jquery-1.11.1.min.js&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/header-portlet-javascript&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/portlet&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Note that here it is important to include things like jquery in this way so that on multiple portlet pages there are no namespace conflicts.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sw360/src/frontend/sw360-portlets/src/main/webapp/WEB-INF/portlet.xml
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;portlet&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;portlet-name&amp;gt;&lt;/span&gt;databaseSanitation&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/portlet-name&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;display-name&amp;gt;&lt;/span&gt;databaseSanitation&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/display-name&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;portlet-class&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        com.siemens.sw360.portal.portlets.admin.DatabaseSanitation
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/portlet-class&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;init-param&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;view-template&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;value&amp;gt;&lt;/span&gt;/html/admin/databaseSanitation/view.jsp&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/value&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/init-param&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;expiration-cache&amp;gt;&lt;/span&gt;0&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/expiration-cache&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;supports&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;mime-type&amp;gt;&lt;/span&gt;text/html&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/mime-type&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;portlet-mode&amp;gt;&lt;/span&gt;view&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/portlet-mode&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/supports&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;portlet-info&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;databaseSanitation&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;short-title&amp;gt;&lt;/span&gt;databaseSanitation&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/short-title&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;keywords/&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/portlet-info&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;security-role-ref&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;role-name&amp;gt;&lt;/span&gt;administrator&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/role-name&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/security-role-ref&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/portlet&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;After these changes we compile the frontend and then we have to add new page to the Layout and add it to the lar file.
We sign in as admin,
go to&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Admin -&amp;gt; Site administration 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-&amp;gt; Private Pages
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;To add the portlet to the page, we first change the theme of Private Pages to Classic, then select Add Page. We can drag and drop it under the Admin Page.
Then we select the Private Pages under My Sites.
We can then go to the page we have just created.
On the left side there is a plus sign, which opens a side menu with the available portlets that we can add to our page.
Under SW360 we find the portlet DatabaseSanitation and we click add.
Then we can change the option (The cog symbol on the right) Look and Feel  to Show Borders -&amp;gt; No and we save that.
Then we change the theme of Private Pages back to SW360-Theme.&lt;/p&gt;
&lt;p&gt;Now we can change the theme back and export a new lar file as described else where.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: SW360 Development Branches</title>
      <link>https://www.eclipse.org/sw360/docs/development/dev-branches/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.eclipse.org/sw360/docs/development/dev-branches/</guid>
      <description>
        
        
        &lt;h2 id=&#34;branches-structure&#34;&gt;Branches structure&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;github-nickname&amp;gt;/&amp;lt;issue&amp;gt;/&amp;lt;description&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;examples&#34;&gt;Examples:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;maierthomas/#1/fix-dowload-bundle&lt;/li&gt;
&lt;li&gt;maierthomas/#3/sw360portal-specific-links&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: How to add fields to an existing class</title>
      <link>https://www.eclipse.org/sw360/docs/development/dev-adding-new-fields-to-existing-classes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.eclipse.org/sw360/docs/development/dev-adding-new-fields-to-existing-classes/</guid>
      <description>
        
        
        &lt;p&gt;The license portlet is different from the other portlets as there is no Details/Edit page for each element. There is only a combined edit/view page.
We will add the license text to licenses in the thrift file:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-thrift&#34; data-lang=&#34;thrift&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f60&#34;&gt;13&lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;optional&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#078;font-weight:bold&#34;&gt;string&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;text;&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;To update the text we write a liferay Action in the LicensesPortlet:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#99f&#34;&gt;@UsedAsLiferayAction&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#078;font-weight:bold&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#c0f&#34;&gt;changeText&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;(&lt;/span&gt;ActionRequest request&lt;span style=&#34;color:#555&#34;&gt;,&lt;/span&gt; ActionResponse response&lt;span style=&#34;color:#555&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;throws&lt;/span&gt; PortletException&lt;span style=&#34;color:#555&#34;&gt;,&lt;/span&gt; IOException &lt;span style=&#34;color:#555&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        String licenseId &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; request&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#309&#34;&gt;getParameter&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;(&lt;/span&gt;LICENSE_ID&lt;span style=&#34;color:#555&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        String text &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; request&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#309&#34;&gt;getParameter&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;(&lt;/span&gt;License&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#309&#34;&gt;_Fields&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#309&#34;&gt;TEXT&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#309&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;());&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;(!&lt;/span&gt;Strings&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#309&#34;&gt;isNullOrEmpty&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;(&lt;/span&gt;licenseId&lt;span style=&#34;color:#555&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#555&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;try&lt;/span&gt; &lt;span style=&#34;color:#555&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                User user &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; UserCacheHolder&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#309&#34;&gt;getUserFromRequest&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;(&lt;/span&gt;request&lt;span style=&#34;color:#555&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                LicenseService&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#309&#34;&gt;Iface&lt;/span&gt; client &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; thriftClients&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#309&#34;&gt;makeLicenseClient&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;final&lt;/span&gt; License license &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; client&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#309&#34;&gt;getFromID&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;(&lt;/span&gt;licenseId&lt;span style=&#34;color:#555&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                license&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#309&#34;&gt;setText&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;(&lt;/span&gt;CommonUtils&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#309&#34;&gt;nullToEmptyString&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;(&lt;/span&gt;text&lt;span style=&#34;color:#555&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;final&lt;/span&gt; RequestStatus requestStatus &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; client&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#309&#34;&gt;updateLicense&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;(&lt;/span&gt;license&lt;span style=&#34;color:#555&#34;&gt;,&lt;/span&gt; user&lt;span style=&#34;color:#555&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                renderRequestStatus&lt;span style=&#34;color:#555&#34;&gt;(&lt;/span&gt;request&lt;span style=&#34;color:#555&#34;&gt;,&lt;/span&gt;response&lt;span style=&#34;color:#555&#34;&gt;,&lt;/span&gt;requestStatus&lt;span style=&#34;color:#555&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#555&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;catch&lt;/span&gt; &lt;span style=&#34;color:#555&#34;&gt;(&lt;/span&gt;TException e&lt;span style=&#34;color:#555&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#555&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                log&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#309&#34;&gt;error&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;Error updating license&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;,&lt;/span&gt; e&lt;span style=&#34;color:#555&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#555&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#555&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        response&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#309&#34;&gt;setRenderParameter&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;(&lt;/span&gt;LICENSE_ID&lt;span style=&#34;color:#555&#34;&gt;,&lt;/span&gt; licenseId&lt;span style=&#34;color:#555&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        response&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#309&#34;&gt;setRenderParameter&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;(&lt;/span&gt;PAGENAME&lt;span style=&#34;color:#555&#34;&gt;,&lt;/span&gt; PAGENAME_DETAIL&lt;span style=&#34;color:#555&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        response&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#309&#34;&gt;setRenderParameter&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;(&lt;/span&gt;SELECTED_TAB&lt;span style=&#34;color:#555&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;LicenseText&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#555&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;To integrate it in the jsp we make the according changes, important to note is the ActionUrl that we define:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;portlet:actionURL&lt;/span&gt; &lt;span style=&#34;color:#309&#34;&gt;var&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;changeLicenseTextURL&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#309&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;changeText&amp;#34;&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;portlet:param&lt;/span&gt; &lt;span style=&#34;color:#309&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;&amp;lt;%=PortalConstants.LICENSE_ID%&amp;gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#309&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;${licenseDetail.id}&amp;#34;&lt;/span&gt; /&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;portlet:actionURL&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;A good practice to name fields in jsps is to use the thrift field names:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &amp;lt;&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;textarea&lt;/span&gt; &lt;span style=&#34;color:#309&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;&amp;lt;portlet:namespace/&amp;gt;&amp;lt;%=License._Fields.TEXT%&amp;gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#309&#34;&gt;rows&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;5&amp;#34;&lt;/span&gt;  &lt;span style=&#34;color:#309&#34;&gt;style&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;width: 100%&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#309&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;&amp;lt;portlet:namespace/&amp;gt;&amp;lt;%=License._Fields.TEXT%&amp;gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#309&#34;&gt;placeholder&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;Enter the License-Text here...&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &amp;gt;${licenseDetail.text}&amp;lt;/&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;textarea&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>Docs: CouchDB External Documents</title>
      <link>https://www.eclipse.org/sw360/docs/development/dev-external-documents-with-couchdb/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.eclipse.org/sw360/docs/development/dev-external-documents-with-couchdb/</guid>
      <description>
        
        
        &lt;h2 id=&#34;motivation&#34;&gt;Motivation&lt;/h2&gt;
&lt;p&gt;In some cases inline documents are not sufficient for storing extended information to a document. This is especially the case if these information might be relevant from outside as well.
Projects, components and releases contain attachments. The metadata of these attachments are stored as inline documents inside its parent document (which is the project, component or release).
However these attachments may be used by other documents as well, e.g. license info files which are attached to releases are used by projects to generate the overall license information for that project.
In such cases an external document might be the better model. For example the attachment usage can be stored along the metadata without touching the owner document on update.&lt;/p&gt;
&lt;h2 id=&#34;advantages-of-external-documents&#34;&gt;Advantages of external documents&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;single documents with a clear separation to other documents&lt;/li&gt;
&lt;li&gt;easy identification&lt;/li&gt;
&lt;li&gt;might be loaded and updated standalone&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;advantages-of-internal-documents&#34;&gt;Advantages of internal documents&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Very fast loading along with the owner&lt;/li&gt;
&lt;li&gt;Easy handling since only the owner must be loaded or updated&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In any case it is highly dependent on the use case whether external documents are to be favored over internal documents.&lt;/p&gt;
&lt;h2 id=&#34;possible-implementations-for-linked-documents&#34;&gt;Possible implementations for linked documents&lt;/h2&gt;
&lt;h3 id=&#34;special-responsehandler-with-special-views-from-couchdb&#34;&gt;Special ResponseHandler with special views from CouchDB&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Easy to use?&lt;/th&gt;
&lt;th&gt;Performance?&lt;/th&gt;
&lt;th&gt;Effort to use in existing code&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;:star::star: Middle, special views have to be created, fields of data objects has to be annotated.&lt;/td&gt;
&lt;td&gt;:star::star::star: Very good, fetching of multiple documents with a single request.&lt;/td&gt;
&lt;td&gt;:star: High, since existing code has to be changed&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;couch-db-theory&#34;&gt;Couch-DB theory&lt;/h4&gt;
&lt;p&gt;At the time of writing, support of external (or linked) documents in Couch-DB is limited. Consider the following documents:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;project &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   _id&lt;span style=&#34;color:#555&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;p1&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   type&lt;span style=&#34;color:#555&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;project&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   name&lt;span style=&#34;color:#555&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;Testproject&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   attachments&lt;span style=&#34;color:#555&#34;&gt;:&lt;/span&gt; [
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       { _id&lt;span style=&#34;color:#555&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;a1&amp;#34;&lt;/span&gt; },
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       { _id&lt;span style=&#34;color:#555&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;z2&amp;#34;&lt;/span&gt; }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   ]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;attachment1 &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    _id&lt;span style=&#34;color:#555&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;a1&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    type&lt;span style=&#34;color:#555&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;attachment&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    name&lt;span style=&#34;color:#555&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;SourceFile&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    sha1&lt;span style=&#34;color:#555&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;abc1234&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;attachment2 &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    _id&lt;span style=&#34;color:#555&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;a2&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    type&lt;span style=&#34;color:#555&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;attachment&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    name&lt;span style=&#34;color:#555&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;LicenseFile&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    sha1&lt;span style=&#34;color:#555&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;fed9876&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Unfortunately there is no way to get the project document with the attachments directly included. With the correct view you are able to retrieve all these documents in a single request:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;function&lt;/span&gt;(doc) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;if&lt;/span&gt;(doc.type &lt;span style=&#34;color:#555&#34;&gt;===&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;attachment&amp;#34;&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        emit(doc._id, &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;null&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;for&lt;/span&gt;(&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;in&lt;/span&gt; doc.attachments) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            emit(doc._id, { _id&lt;span style=&#34;color:#555&#34;&gt;:&lt;/span&gt; doc.attachments[i]._id });
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You might see the trick: the project document as well as the attachment documents are indexed with the id of the project. This way you get all three documents when querying the view with the id of the project:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;total_rows&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f60&#34;&gt;5&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;offset&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f60&#34;&gt;0&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;rows&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;:&lt;/span&gt;[{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;         &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;p1&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;         &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;key&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;p1&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;         &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;doc&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;:&lt;/span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;_id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;p1&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;attachments&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;:&lt;/span&gt;[
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;               &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;a1&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;a2&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            ],
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;Testproject&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            ...
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;         },
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;         ...
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      }, {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;         &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;p1&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;         &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;doc&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;:&lt;/span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;_id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;a1&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            name&lt;span style=&#34;color:#555&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;SourceFile&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            ...
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;         },
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;         ...
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      }, {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;         &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;p1&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;         &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;key&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;p1&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;         &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;value&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;null&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;         &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;doc&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;:&lt;/span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;_id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;a2&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            name&lt;span style=&#34;color:#555&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;LicenseFile&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            ...
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;         },
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;         ...
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; is will only work if you query the view with &lt;code&gt;include_docs&lt;/code&gt; set to &lt;code&gt;true&lt;/code&gt;.
&lt;strong&gt;Note&lt;/strong&gt; include_docs will only work at the top level of a value. In other words it will only recognize the following to situations:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;null: if the value is null, the document which is identified by the key is included&lt;/li&gt;
&lt;li&gt;{ _id: &amp;ldquo;&amp;hellip;&amp;rdquo; }: the document identified by the given id is included.
To be clear: transitive inclusions will not work!
&lt;strong&gt;Note&lt;/strong&gt; See also &lt;a href=&#34;https://wiki.apache.org/couchdb/Introduction_to_CouchDB_views#Linked_documents&#34;&gt;https://wiki.apache.org/couchdb/Introduction_to_CouchDB_views#Linked_documents&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;implementation-with-ektorp&#34;&gt;Implementation with Ektorp&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/eclipse/sw360/pull/596&#34;&gt;https://github.com/eclipse/sw360/pull/596&lt;/a&gt; show an implementation to transparently read such results from Couch-DB. It consists of:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;new methods in the database connector which are aware of loading linked documents&lt;/li&gt;
&lt;li&gt;a response handler used for parsing the results when requesting linked documents&lt;/li&gt;
&lt;li&gt;two annotation classes to mark fields which contain ids for linked documents
After the branch was merged, the new feature can be used in only three steps. You need:&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;A view that loads the &amp;ldquo;main&amp;rdquo; documents along with there linked documents&lt;/li&gt;
&lt;li&gt;A special method in your database handler / database repository which calls the new method from the connector&lt;/li&gt;
&lt;li&gt;A mixin for your data object which annotates the fields which contain ids to linked documents&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;notes-for-1&#34;&gt;Notes for 1.&lt;/h4&gt;
&lt;p&gt;Have a look at mapping function above in the theory section. Of course you may add more than one type of linked documents, e.g. not only attachments but releases as well.
You may also emit whole objects instead of ids only. This way Couch-DB does not have to lookup each entry. However including ids over objects is an own topic.&lt;/p&gt;
&lt;h4 id=&#34;notes-for-2&#34;&gt;Notes for 2.&lt;/h4&gt;
&lt;p&gt;You should write methods in your repository as well as in your database handler that uses the new methods from the database connector.&lt;/p&gt;
&lt;h4 id=&#34;notes-for-3&#34;&gt;Notes for 3.&lt;/h4&gt;
&lt;p&gt;Be sure that the used object mapper in your database handler is aware of the mixin. Of course you can annotate more than one field. All annotated fields will be respected on loading. However, if the view does not contain an object that should be resolved, it will be replaced by null. The LinkedDocuments-annotation even allows you to name a different destination field for the resolved objects for easier integration into the existing code.&lt;/p&gt;
&lt;h2 id=&#34;usage-with-ektorp&#34;&gt;Usage with Ektorp&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Easy to use?&lt;/th&gt;
&lt;th&gt;Performance?&lt;/th&gt;
&lt;th&gt;Effort to use in existing code&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;:no_entry: does not work&lt;/td&gt;
&lt;td&gt;:no_entry:&lt;/td&gt;
&lt;td&gt;:no_entry:&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Since SW360 is using Ektorp as Objectmapper, a response like above is not suitable. Ektorp is just not able to parse the above response correctly.
However Ektorp has a linking feature as well: You may annotate fields with the &lt;code&gt;@DocumentReference&lt;/code&gt;-Annotation to tell Ektorp to store the content within external documents. This only works with fields of type &lt;code&gt;Set&lt;/code&gt; at the moment of writing. Since SW360 data objects are generated using Thrift, directly annotating the field is not possible. Due to the mixin feature of Ektorp this is not a big issue. Unfortunately making the &lt;code&gt;@DocumentReference&lt;/code&gt;-annotation to work was not possible with a reasonable effort.&lt;/p&gt;
&lt;p&gt;Internally Ektorp is also using special views for getting linked documents to work. A quick look into the source codes suggests that this feature is implemented using special serializers which would lead to additional requests on loading and storing as well. Therefore the same performance issues might be come across if the annotation would work.&lt;/p&gt;
&lt;h3 id=&#34;own-serializerdeserzialer&#34;&gt;Own serializer/deserzialer&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Easy to use?&lt;/th&gt;
&lt;th&gt;Performance?&lt;/th&gt;
&lt;th&gt;Effort to use in existing code&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;:star::star::star: Quite easy, just some Jackson configuration necessary&lt;/td&gt;
&lt;td&gt;:star::star: Good, but every type of linked objects needs an additional request&lt;/td&gt;
&lt;td&gt;:star::star::star: Low, existing code does not have to be changed&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;This method works just like the Ektorp way. In addition a slow transition from internal to external documents is possible, since the custom serialization methods will handle both cases directly. Any embedded documents will be externalized on first update of the owner object.
The following classes are needed:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Repository for the new external documents&lt;/li&gt;
&lt;li&gt;DatabaseHandler for the new external documents&lt;/li&gt;
&lt;li&gt;Mixin-Class to add annotations to the field with external documents&lt;/li&gt;
&lt;li&gt;A new mapper factory to properly configure the custom serializer&lt;/li&gt;
&lt;li&gt;Custom serializers/deserializer&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;example-for-externalizing-attachments&#34;&gt;Example for externalizing attachments&lt;/h4&gt;
&lt;h5 id=&#34;mixin-class&#34;&gt;Mixin-Class&lt;/h5&gt;
&lt;p&gt;This will configure Ektorp to use a special class for this field. We use a special serializer for the field instead of for the type (in this case Attachment), so we can do serialization/deserialization for all attachments at once. If we would use a special serializer, every&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;abstract&lt;/span&gt; &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#0a8;font-weight:bold&#34;&gt;SplitAttachmentsMixin&lt;/span&gt; &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;extends&lt;/span&gt; DatabaseMixIn &lt;span style=&#34;color:#555&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#99f&#34;&gt;@JsonSerialize&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;(&lt;/span&gt;using &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; AttachmentSetSerializer&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#309&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#99f&#34;&gt;@JsonDeserialize&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;(&lt;/span&gt;using &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; AttachmentSetDeserializer&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#309&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;abstract&lt;/span&gt; &lt;span style=&#34;color:#078;font-weight:bold&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#c0f&#34;&gt;setAttachments&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;(&lt;/span&gt;Set&lt;span style=&#34;color:#555&#34;&gt;&amp;lt;&lt;/span&gt;Attachment&lt;span style=&#34;color:#555&#34;&gt;&amp;gt;&lt;/span&gt; attachments&lt;span style=&#34;color:#555&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#555&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h5 id=&#34;mapper-factory&#34;&gt;Mapper factory&lt;/h5&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#0a8;font-weight:bold&#34;&gt;SplitAttachmentsMapperFactory&lt;/span&gt; &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;extends&lt;/span&gt; MapperFactory &lt;span style=&#34;color:#555&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;final&lt;/span&gt; AttachmentHandlerInstantiator handlerInitiator&lt;span style=&#34;color:#555&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#c0f&#34;&gt;SplitAttachmentsMapperFactory&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;(&lt;/span&gt;Supplier&lt;span style=&#34;color:#555&#34;&gt;&amp;lt;&lt;/span&gt;HttpClient&lt;span style=&#34;color:#555&#34;&gt;&amp;gt;&lt;/span&gt; httpClient&lt;span style=&#34;color:#555&#34;&gt;,&lt;/span&gt; String dbName&lt;span style=&#34;color:#555&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;throws&lt;/span&gt; MalformedURLException &lt;span style=&#34;color:#555&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        handlerInitiator &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;new&lt;/span&gt; AttachmentHandlerInstantiator&lt;span style=&#34;color:#555&#34;&gt;(&lt;/span&gt;httpClient&lt;span style=&#34;color:#555&#34;&gt;,&lt;/span&gt; dbName&lt;span style=&#34;color:#555&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#555&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#99f&#34;&gt;@Override&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;public&lt;/span&gt; ObjectMapper &lt;span style=&#34;color:#c0f&#34;&gt;createObjectMapper&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#555&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        ObjectMapper objectMapper &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;super&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#309&#34;&gt;createObjectMapper&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        objectMapper&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#309&#34;&gt;addMixInAnnotations&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;(&lt;/span&gt;Project&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#309&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;,&lt;/span&gt; SplitAttachmentsMixin&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#309&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        objectMapper&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#309&#34;&gt;setHandlerInstantiator&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;(&lt;/span&gt;handlerInitiator&lt;span style=&#34;color:#555&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;return&lt;/span&gt; objectMapper&lt;span style=&#34;color:#555&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#555&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#0a8;font-weight:bold&#34;&gt;AttachmentHandlerInstantiator&lt;/span&gt; &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;extends&lt;/span&gt; HandlerInstantiator &lt;span style=&#34;color:#555&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;final&lt;/span&gt; AttachmentSetSerializer attachmentSetSerializer&lt;span style=&#34;color:#555&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;final&lt;/span&gt; AttachmentSetDeserializer attachmentSetDeserializer&lt;span style=&#34;color:#555&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#c0f&#34;&gt;AttachmentHandlerInstantiator&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;(&lt;/span&gt;Supplier&lt;span style=&#34;color:#555&#34;&gt;&amp;lt;&lt;/span&gt;HttpClient&lt;span style=&#34;color:#555&#34;&gt;&amp;gt;&lt;/span&gt; httpClient&lt;span style=&#34;color:#555&#34;&gt;,&lt;/span&gt; String dbName&lt;span style=&#34;color:#555&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;throws&lt;/span&gt; MalformedURLException &lt;span style=&#34;color:#555&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            attachmentSetSerializer &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;new&lt;/span&gt; AttachmentSetSerializer&lt;span style=&#34;color:#555&#34;&gt;(&lt;/span&gt;httpClient&lt;span style=&#34;color:#555&#34;&gt;,&lt;/span&gt; dbName&lt;span style=&#34;color:#555&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            attachmentSetDeserializer &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;new&lt;/span&gt; AttachmentSetDeserializer&lt;span style=&#34;color:#555&#34;&gt;(&lt;/span&gt;httpClient&lt;span style=&#34;color:#555&#34;&gt;,&lt;/span&gt; dbName&lt;span style=&#34;color:#555&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#555&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#99f&#34;&gt;@Override&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;public&lt;/span&gt; JsonDeserializer&lt;span style=&#34;color:#555&#34;&gt;&amp;lt;?&amp;gt;&lt;/span&gt; deserializerInstance&lt;span style=&#34;color:#555&#34;&gt;(&lt;/span&gt;DeserializationConfig config&lt;span style=&#34;color:#555&#34;&gt;,&lt;/span&gt; Annotated annotated&lt;span style=&#34;color:#555&#34;&gt;,&lt;/span&gt; Class&lt;span style=&#34;color:#555&#34;&gt;&amp;lt;?&amp;gt;&lt;/span&gt; deserClass&lt;span style=&#34;color:#555&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#555&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#555&#34;&gt;(&lt;/span&gt;deserClass&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#309&#34;&gt;isInstance&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;(&lt;/span&gt;attachmentSetDeserializer&lt;span style=&#34;color:#555&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#555&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;return&lt;/span&gt; attachmentSetDeserializer&lt;span style=&#34;color:#555&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#555&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#555&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#555&#34;&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#555&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#555&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h5 id=&#34;serializer&#34;&gt;Serializer&lt;/h5&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#0a8;font-weight:bold&#34;&gt;AttachmentSetSerializer&lt;/span&gt; &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;extends&lt;/span&gt; JsonSerializer&lt;span style=&#34;color:#555&#34;&gt;&amp;lt;&lt;/span&gt;Set&lt;span style=&#34;color:#555&#34;&gt;&amp;lt;&lt;/span&gt;Attachment&lt;span style=&#34;color:#555&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#555&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;final&lt;/span&gt; AttachmentDatabaseHandler handler&lt;span style=&#34;color:#555&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#c0f&#34;&gt;AttachmentSetSerializer&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;(&lt;/span&gt;Supplier&lt;span style=&#34;color:#555&#34;&gt;&amp;lt;&lt;/span&gt;HttpClient&lt;span style=&#34;color:#555&#34;&gt;&amp;gt;&lt;/span&gt; httpClient&lt;span style=&#34;color:#555&#34;&gt;,&lt;/span&gt; String dbName&lt;span style=&#34;color:#555&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;throws&lt;/span&gt; MalformedURLException &lt;span style=&#34;color:#555&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#309&#34;&gt;handler&lt;/span&gt; &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;new&lt;/span&gt; AttachmentDatabaseHandler&lt;span style=&#34;color:#555&#34;&gt;(&lt;/span&gt;httpClient&lt;span style=&#34;color:#555&#34;&gt;,&lt;/span&gt; dbName&lt;span style=&#34;color:#555&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#555&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#99f&#34;&gt;@Override&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#078;font-weight:bold&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#c0f&#34;&gt;serialize&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;(&lt;/span&gt;Set&lt;span style=&#34;color:#555&#34;&gt;&amp;lt;&lt;/span&gt;Attachment&lt;span style=&#34;color:#555&#34;&gt;&amp;gt;&lt;/span&gt; attachments&lt;span style=&#34;color:#555&#34;&gt;,&lt;/span&gt; JsonGenerator jsonGenerator&lt;span style=&#34;color:#555&#34;&gt;,&lt;/span&gt; SerializerProvider provider&lt;span style=&#34;color:#555&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;throws&lt;/span&gt; IOException&lt;span style=&#34;color:#555&#34;&gt;,&lt;/span&gt; JsonProcessingException &lt;span style=&#34;color:#555&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;try&lt;/span&gt; &lt;span style=&#34;color:#555&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            List&lt;span style=&#34;color:#555&#34;&gt;&amp;lt;&lt;/span&gt;DocumentOperationResult&lt;span style=&#34;color:#555&#34;&gt;&amp;gt;&lt;/span&gt; results &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; handler&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#309&#34;&gt;bulkCreateOrUpdateAttachments&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;(&lt;/span&gt;attachments&lt;span style=&#34;color:#555&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#555&#34;&gt;(!&lt;/span&gt;results&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#309&#34;&gt;isEmpty&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;())&lt;/span&gt; &lt;span style=&#34;color:#555&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;throw&lt;/span&gt; &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;new&lt;/span&gt; IOException&lt;span style=&#34;color:#555&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;Cannot create or update attachments. Some failed: &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#555&#34;&gt;+&lt;/span&gt; results&lt;span style=&#34;color:#555&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#555&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#555&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;catch&lt;/span&gt; &lt;span style=&#34;color:#555&#34;&gt;(&lt;/span&gt;SW360Exception exception&lt;span style=&#34;color:#555&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#555&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;throw&lt;/span&gt; &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;new&lt;/span&gt; IOException&lt;span style=&#34;color:#555&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;Cannot create or update attachments.&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;,&lt;/span&gt; exception&lt;span style=&#34;color:#555&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#555&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        jsonGenerator&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#309&#34;&gt;writeStartArray&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#555&#34;&gt;(&lt;/span&gt;Attachment attachment &lt;span style=&#34;color:#555&#34;&gt;:&lt;/span&gt; attachments&lt;span style=&#34;color:#555&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#555&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            jsonGenerator&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#309&#34;&gt;writeStartObject&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            jsonGenerator&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#309&#34;&gt;writeStringField&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;_id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;,&lt;/span&gt; attachment&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#309&#34;&gt;getId&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;());&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            jsonGenerator&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#309&#34;&gt;writeEndObject&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#555&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        jsonGenerator&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#309&#34;&gt;writeEndArray&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#555&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#555&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;deserializer&#34;&gt;Deserializer&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#0a8;font-weight:bold&#34;&gt;AttachmentSetDeserializer&lt;/span&gt; &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;extends&lt;/span&gt; JsonDeserializer&lt;span style=&#34;color:#555&#34;&gt;&amp;lt;&lt;/span&gt;Set&lt;span style=&#34;color:#555&#34;&gt;&amp;lt;&lt;/span&gt;Attachment&lt;span style=&#34;color:#555&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#555&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;final&lt;/span&gt; AttachmentDatabaseHandler handler&lt;span style=&#34;color:#555&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#c0f&#34;&gt;AttachmentSetDeserializer&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;(&lt;/span&gt;Supplier&lt;span style=&#34;color:#555&#34;&gt;&amp;lt;&lt;/span&gt;HttpClient&lt;span style=&#34;color:#555&#34;&gt;&amp;gt;&lt;/span&gt; httpClient&lt;span style=&#34;color:#555&#34;&gt;,&lt;/span&gt; String dbName&lt;span style=&#34;color:#555&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;throws&lt;/span&gt; MalformedURLException &lt;span style=&#34;color:#555&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#309&#34;&gt;handler&lt;/span&gt; &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;new&lt;/span&gt; AttachmentDatabaseHandler&lt;span style=&#34;color:#555&#34;&gt;(&lt;/span&gt;httpClient&lt;span style=&#34;color:#555&#34;&gt;,&lt;/span&gt; dbName&lt;span style=&#34;color:#555&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#555&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#99f&#34;&gt;@Override&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;public&lt;/span&gt; Set&lt;span style=&#34;color:#555&#34;&gt;&amp;lt;&lt;/span&gt;Attachment&lt;span style=&#34;color:#555&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#c0f&#34;&gt;deserialize&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;(&lt;/span&gt;JsonParser jsonParser&lt;span style=&#34;color:#555&#34;&gt;,&lt;/span&gt; DeserializationContext context&lt;span style=&#34;color:#555&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;throws&lt;/span&gt; IOException&lt;span style=&#34;color:#555&#34;&gt;,&lt;/span&gt; JsonProcessingException &lt;span style=&#34;color:#555&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        Set&lt;span style=&#34;color:#555&#34;&gt;&amp;lt;&lt;/span&gt;Attachment&lt;span style=&#34;color:#555&#34;&gt;&amp;gt;&lt;/span&gt; attachments &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; Sets&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#309&#34;&gt;newHashSet&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#555&#34;&gt;(!&lt;/span&gt;jsonParser&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#309&#34;&gt;isExpectedStartArrayToken&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;())&lt;/span&gt; &lt;span style=&#34;color:#555&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;throw&lt;/span&gt; &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;new&lt;/span&gt; IllegalStateException&lt;span style=&#34;color:#555&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;Expected array token but found: &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#555&#34;&gt;+&lt;/span&gt; jsonParser&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#309&#34;&gt;getCurrentToken&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color:#309&#34;&gt;asString&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;());&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#555&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        Set&lt;span style=&#34;color:#555&#34;&gt;&amp;lt;&lt;/span&gt;String&lt;span style=&#34;color:#555&#34;&gt;&amp;gt;&lt;/span&gt; attachmentIds &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; Sets&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#309&#34;&gt;newHashSet&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        JsonToken token &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; jsonParser&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#309&#34;&gt;nextToken&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;while&lt;/span&gt; &lt;span style=&#34;color:#555&#34;&gt;(!&lt;/span&gt;JsonToken&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#309&#34;&gt;END_ARRAY&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#309&#34;&gt;equals&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;(&lt;/span&gt;token&lt;span style=&#34;color:#555&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#555&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;switch&lt;/span&gt; &lt;span style=&#34;color:#555&#34;&gt;(&lt;/span&gt;token&lt;span style=&#34;color:#555&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#555&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;case&lt;/span&gt; START_OBJECT&lt;span style=&#34;color:#555&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                Attachment attachment &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; jsonParser&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#309&#34;&gt;readValueAs&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;(&lt;/span&gt;Attachment&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#309&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#555&#34;&gt;(&lt;/span&gt;attachment&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#309&#34;&gt;isSetId&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#555&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#555&#34;&gt;!&lt;/span&gt;attachment&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#309&#34;&gt;isSetRevision&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;())&lt;/span&gt; &lt;span style=&#34;color:#555&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    attachmentIds&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#309&#34;&gt;add&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;(&lt;/span&gt;attachment&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#309&#34;&gt;getId&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;());&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#555&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#555&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    attachments&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#309&#34;&gt;add&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;(&lt;/span&gt;attachment&lt;span style=&#34;color:#555&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#555&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;break&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#99f&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#99f&#34;&gt;            default:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;throw&lt;/span&gt; &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;new&lt;/span&gt; IllegalStateException&lt;span style=&#34;color:#555&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;Unexpected token. Expected object or string but found: &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#555&#34;&gt;+&lt;/span&gt; jsonParser&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#309&#34;&gt;getCurrentToken&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color:#309&#34;&gt;asString&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;());&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#555&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            token &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; jsonParser&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#309&#34;&gt;nextToken&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#555&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#555&#34;&gt;(!&lt;/span&gt;attachmentIds&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#309&#34;&gt;isEmpty&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;())&lt;/span&gt; &lt;span style=&#34;color:#555&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;try&lt;/span&gt; &lt;span style=&#34;color:#555&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                attachments&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#309&#34;&gt;addAll&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;(&lt;/span&gt;handler&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#309&#34;&gt;retrieveAttachments&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;(&lt;/span&gt;attachmentIds&lt;span style=&#34;color:#555&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#555&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;catch&lt;/span&gt; &lt;span style=&#34;color:#555&#34;&gt;(&lt;/span&gt;SW360Exception exception&lt;span style=&#34;color:#555&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#555&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;throw&lt;/span&gt; &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;new&lt;/span&gt; IOException&lt;span style=&#34;color:#555&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;Cannot load attachments (&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#555&#34;&gt;+&lt;/span&gt; attachmentIds &lt;span style=&#34;color:#555&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;)&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;,&lt;/span&gt; exception&lt;span style=&#34;color:#555&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#555&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#555&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;return&lt;/span&gt; attachments&lt;span style=&#34;color:#555&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#555&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#555&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>Docs: Database migration using Costco</title>
      <link>https://www.eclipse.org/sw360/docs/development/dev-database-migration-using-costco/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.eclipse.org/sw360/docs/development/dev-database-migration-using-costco/</guid>
      <description>
        
        
        &lt;h3 id=&#34;praeamble&#34;&gt;Praeamble&lt;/h3&gt;
&lt;p&gt;Please note that database migrations are done now in python scripts at&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/eclipse/sw360/tree/master/scripts/migrations&#34;&gt;https://github.com/eclipse/sw360/tree/master/scripts/migrations&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;keeping the following page because Costco might be useful for development / testing / quick adaptations.&lt;/p&gt;
&lt;h3 id=&#34;problem&#34;&gt;Problem&lt;/h3&gt;
&lt;p&gt;The main problem with changing field names in thrift is that existing documents in the couchdb need adjustments. Unfortunately, the futon interface of the couchdb does not offer bulk edits. As a consequence, looking into every document is tedious, for more than 100 documents, maybe unfeasible.&lt;/p&gt;
&lt;h3 id=&#34;solution&#34;&gt;Solution&lt;/h3&gt;
&lt;p&gt;Use costco, an open source project that&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;is a couchapp (right, this implies that you install the couchapp environment)&lt;/li&gt;
&lt;li&gt;offers a Web interface as sub path of the couchdb database&lt;/li&gt;
&lt;li&gt;allows to iterate through the documents of a database and then apply modifications on a particular document&lt;/li&gt;
&lt;li&gt;allows to perform modifications on documents using Java script&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;More information&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Project website: &lt;a href=&#34;https://github.com/harthur/costco&#34;&gt;https://github.com/harthur/costco&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Useful examples: &lt;a href=&#34;http://harthur.github.io/costco/&#34;&gt;http://harthur.github.io/costco/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Note that costco does not allow to perform operations involving several documents at once, for example, setting values in one document that results from querying from several other documents. Costco is perfect for corrections on the couchdb document &amp;lsquo;schema&amp;rsquo; (not in the classic sense as there is no schema in couchdb).&lt;/p&gt;
&lt;h3 id=&#34;troubleshooting&#34;&gt;Troubleshooting&lt;/h3&gt;
&lt;p&gt;If you try to install costco, you try to install couchapp mst likely. However, it might be that some python packages are missing which results in a &amp;rsquo;not-so-obvious&amp;rsquo; python error during install of couchapp. The following line could be th dependencies that you might need:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Bash&#34; data-lang=&#34;Bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt-get install python-dev libxml2-dev libxslt-dev
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;cheat-sheet-installing-costco-inside-an-sw360vagrant-deployment&#34;&gt;Cheat Sheet: Installing costco inside an sw360vagrant deployment&lt;/h3&gt;
&lt;p&gt;OK, if you read until here, to make it easy for you just the few lines to have executed to install costco when youi have a machine that is deployed with our vagrant:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Bash&#34; data-lang=&#34;Bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ sudo apt-get install python-dev libxml2-dev libxslt-dev
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ sudo pip install couchapp
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ git clone http://github.com/harthur/costco.git
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ &lt;span style=&#34;color:#366&#34;&gt;cd&lt;/span&gt; costco
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ couchapp push . http://localhost:5984/sw360db
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;examples-in-sw360&#34;&gt;Examples in sw360&lt;/h3&gt;
&lt;p&gt;The following examples show some costco code from the use with sw360.&lt;/p&gt;
&lt;h4 id=&#34;renaming-a-key&#34;&gt;Renaming a key&lt;/h4&gt;
&lt;p&gt;In order to rename a field&amp;rsquo;s key, the following code might be helpful. In the following example, the field&amp;rsquo;s key &lt;code&gt;developement&lt;/code&gt; into &lt;code&gt;development&lt;/code&gt; (correcting a typo in the datamodel).&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-JavaScript&#34; data-lang=&#34;JavaScript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;function&lt;/span&gt;(doc) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;if&lt;/span&gt;(doc.type &lt;span style=&#34;color:#555&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;todo&amp;#39;&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     doc.development &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; doc.developement;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;delete&lt;/span&gt; doc.developement;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;return&lt;/span&gt; doc;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;renaming-a-key-in-a-subdocument&#34;&gt;Renaming a key in a subdocument&lt;/h4&gt;
&lt;p&gt;Similar thing as above, rename a key from &lt;code&gt;comment&lt;/code&gt; to &lt;code&gt;createdcomment&lt;/code&gt;, but this time inside a nested list of documents.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-JavaScript&#34; data-lang=&#34;JavaScript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;function&lt;/span&gt;(doc) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;if&lt;/span&gt; (doc.type &lt;span style=&#34;color:#555&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;release&amp;#39;&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;var&lt;/span&gt; f &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;0&lt;/span&gt;, len &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; doc.attachments.length; f &lt;span style=&#34;color:#555&#34;&gt;&amp;lt;&lt;/span&gt; len; f &lt;span style=&#34;color:#555&#34;&gt;+=&lt;/span&gt;&lt;span style=&#34;color:#f60&#34;&gt;1&lt;/span&gt; ) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       doc.attachments[f].createdComment &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; doc.attachments[f].comment;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;delete&lt;/span&gt;  doc.attachments[f].comment;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;return&lt;/span&gt; doc;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;more-javascript-examples-with-couchdb&#34;&gt;More JavaScript Examples with CouchDB&lt;/h3&gt;
&lt;p&gt;In addition to costco, also the couchdb map-reduce functions can help to track down issues in the data sets.&lt;/p&gt;
&lt;p&gt;The following example searched for attachments of type &lt;code&gt;SOURCE&lt;/code&gt; at releases, which do not have the &lt;code&gt;createdBy&lt;/code&gt; set:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-JavaScript&#34; data-lang=&#34;JavaScript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;function&lt;/span&gt;(doc) { 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;if&lt;/span&gt; ((doc.type &lt;span style=&#34;color:#555&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;release&amp;#39;&lt;/span&gt;) 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       &lt;span style=&#34;color:#555&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; (doc.attachments)) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;var&lt;/span&gt; attachment &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;in&lt;/span&gt; doc.attachments) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#555&#34;&gt;!&lt;/span&gt;doc.attachments[attachment].createdBy) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;if&lt;/span&gt; (doc.attachments[attachment].attachmentType&lt;span style=&#34;color:#555&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;SOURCE&amp;#39;&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          emit(doc._id, doc.attachments[attachment].filename);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The following example looks into date fields, in this case &lt;code&gt;createdOn&lt;/code&gt;, and checks if it uses dots (for changing them into dashes).&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-JavaScript&#34; data-lang=&#34;JavaScript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;function&lt;/span&gt;(doc) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;if&lt;/span&gt;(
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      (doc.type &lt;span style=&#34;color:#555&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;release&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#555&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; (doc.createdOn.indexOf(&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;.&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#555&#34;&gt;!==&lt;/span&gt; &lt;span style=&#34;color:#555&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#f60&#34;&gt;1&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    )
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      emit(doc.name, doc)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>Docs: Definition of Done</title>
      <link>https://www.eclipse.org/sw360/docs/development/dev-dod-and-style/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.eclipse.org/sw360/docs/development/dev-dod-and-style/</guid>
      <description>
        
        
        &lt;h3 id=&#34;policy&#34;&gt;Policy&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Review points should involve one person from another angle (not just the person you were sitting together with anyways)&lt;/li&gt;
&lt;li&gt;Limit items in review to 5, try to coordinate&lt;/li&gt;
&lt;li&gt;Using Github assignments to issues or pull requests&lt;/li&gt;
&lt;li&gt;Open review items require conversation&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;definition-of-done&#34;&gt;Definition of Done&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;File headers in file OK&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;EPL-2.0 license header&lt;/li&gt;
&lt;li&gt;Or, if the file is too small, configuration file: license note (see code style)&lt;/li&gt;
&lt;li&gt;Copyright and author&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create Branches for sw360&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Please use conventional branch names for sw360 &lt;a href=&#34;https://www.eclipse.org/sw360/sw360/docs/development/dev-branches/&#34;&gt;Dev-Branches&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Avoid (serious) compiler warnings&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Squash your commits into one or more logical units of work. No dozens of hourly/daily commits in your pull request, please&lt;/li&gt;
&lt;li&gt;Rebase onto current master so that a fast forward merge is possible&lt;/li&gt;
&lt;li&gt;That means that merge to master is prepared&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;No breaking test&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Unit testing as it is already present&lt;/li&gt;
&lt;li&gt;You have more - use them!&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;New test&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For new / added functionality&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Documentation&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;in the Githuib Wiki-Section, if you have done something new&lt;/li&gt;
&lt;li&gt;At least a technical note for newly added functionality&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Commit style&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;try to squash commits. In the ideal case, a feature is contained in one commit.&lt;/li&gt;
&lt;li&gt;try to use conventional changelog for commit messages. &lt;a href=&#34;https://www.eclipse.org/sw360/sw360/docs/development/dev-semantic-commits/&#34;&gt;Dev-Semantic-Commits&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;review&#34;&gt;Review&lt;/h1&gt;
&lt;p&gt;Review basically checks for the D-o-D items, in particular&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Code style, not really formatting, but issues like style attributes in HTML tags or exception handling useful&lt;/li&gt;
&lt;li&gt;Design / architecture issues&lt;/li&gt;
&lt;li&gt;Community contribution suitability&lt;/li&gt;
&lt;li&gt;Issue coverage (does it actually solve the problem?)&lt;/li&gt;
&lt;li&gt;Add to commit message of merge commit explicitly:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;review-by:email@domain.com
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;and&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tested-by:email@domain.com
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;licensing-and-file-header&#34;&gt;Licensing and File Header&lt;/h1&gt;
&lt;p&gt;All files contributed require headers - this will ensure the license and copyright clearing at the end. Also, all contributions must have the same license as the original source.&lt;/p&gt;
&lt;p&gt;If a file has relevant functionality, note that we should move to Eclipse 2.0&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Java&#34; data-lang=&#34;Java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;/*
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt; * Copyright COPYRIGHT HOLDER, 2017.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt; * Copyright NEXT COPYRIGHT HOLDER, 2017.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt; * Part of the SW360 Portal Project.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt; *
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt; * SPDX-License-Identifier: EPL-1.0
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt; *
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt; * All rights reserved. This program and the accompanying materials
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt; * are made available under the terms of the Eclipse Public License v1.0
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt; * which accompanies this distribution, and is available at
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt; * http://www.eclipse.org/legal/epl-v10.html
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt; */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;(please adapt comment characters usage)&lt;/p&gt;
&lt;p&gt;For small files such as property files, configuration files or standard XML files:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Bash&#34; data-lang=&#34;Bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;# Copyright &amp;lt;COPYRIGHT_HOLDER&amp;gt;, &amp;lt;YEAR&amp;gt;. Part of the SW360 Portal Project.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;# All rights reserved. This configuration file is provided to you under the&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;# terms and conditions of the Eclipse Distribution License v1.0 which&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;# accompanies this distribution, and is available at&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;# http://www.eclipse.org/org/documents/edl-v10.php&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;code-style&#34;&gt;Code style&lt;/h1&gt;
&lt;p&gt;Just use the standard Java formatting rules of your IDE and &lt;strong&gt;do not reformat&lt;/strong&gt; code from others, because you like to correct formatting of other&amp;rsquo;s code.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Filtering in Portlets</title>
      <link>https://www.eclipse.org/sw360/docs/development/dev-filtering-in-portlets/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.eclipse.org/sw360/docs/development/dev-filtering-in-portlets/</guid>
      <description>
        
        
        &lt;p&gt;For the filters that are shown for components and listings, there are some options:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;The &lt;strong&gt;Keyword search&lt;/strong&gt; works directly on the table shown on the main right area. For example in the components portlet, this is in components/view.jsp.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;strong&gt;filters&lt;/strong&gt; actually result in a new search request, when hitting apply filters button. The project portlet reads the fields and creates a map. Then, &lt;code&gt;ProjectPortlet&lt;/code&gt; calls the thrift service &lt;code&gt;refineSearch()&lt;/code&gt;, which is handled in &lt;code&gt;ProjectHandler&lt;/code&gt;. This method takes the map and the user as input. The search service has a server-side JavaScript function (LuceneSearchView) defined for this particular filter in &lt;code&gt;ProjectSearchHandler.java&lt;/code&gt;. This is called with the &lt;code&gt;LuceneAwareDatabaseConnector.java&lt;/code&gt;. After filtering, the visibility constraints for the requesting user are applied.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Then for each release table, there is a search field in the upper right corner. This again works on the data of the Release summary object and then filters what is on the client (web browser).&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Fossology Integration</title>
      <link>https://www.eclipse.org/sw360/docs/development/dev-fossology-integration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.eclipse.org/sw360/docs/development/dev-fossology-integration/</guid>
      <description>
        
        
        &lt;p&gt;Basic communication with the FOSSology server is done over an SSH connection: the fossology service of SW360 executes remote commands on the FOSSology server.&lt;/p&gt;
&lt;p&gt;The commands that are executed are the bash scripts found inside &lt;code&gt;src-fossology/src/main/resources/scripts/&lt;/code&gt;, they are copied into the home directory of the ssh user (either manually or through the admin portlet).
See &lt;a href=&#34;Fossology-Setup&#34;&gt;Setup of connection with Fossology&lt;/a&gt; for configuration details.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;\- src-fossology/src/main/resources/
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; \- scripts/
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  |- duplicateUpload
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  |- folderManager
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  |- getStatusOfUpload
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  |- uploadFromSW360
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  \- utilsSW360
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;These scripts utilize the standard command line tools to interact natively with FOSSology (these are the tools found in the src/cli folder of FOSSology, such as &lt;code&gt;cp2foss fossjobs fossupload_status fo_usergroup fo_chmod fo_folder ...&lt;/code&gt;).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;utilsSW360&lt;/code&gt; contains common functions used by the other scripts and some FOSSology configuration such as the user/password pair used to run the cli utils and the UNIX group of the FOSSology processes&lt;/li&gt;
&lt;li&gt;&lt;code&gt;folderManager&lt;/code&gt; (uses FO:&lt;code&gt;fo_folder&lt;/code&gt;): get information about the folder structure of FOSSology to allow sharing of uploads between groups&lt;/li&gt;
&lt;li&gt;&lt;code&gt;getStatusOfUpload&lt;/code&gt; (uses FO:&lt;code&gt;fossupload_status&lt;/code&gt;): to get the clearing status given an uploadId and a group&lt;/li&gt;
&lt;li&gt;&lt;code&gt;uploadFromSW360&lt;/code&gt; (uses FO:&lt;code&gt;cp2foss fossjobs&lt;/code&gt;): to create a new upload from the standard input and schedule scanners&lt;/li&gt;
&lt;li&gt;&lt;code&gt;duplicateUpload&lt;/code&gt; (uses FO:&lt;code&gt;fo_chmod&lt;/code&gt; SW:&lt;code&gt;folderManager&lt;/code&gt;): to make a previously uploaded file available for another group&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;java-libraries-and-settings&#34;&gt;Java libraries and settings&lt;/h3&gt;
&lt;p&gt;The java code utilizes the package &lt;code&gt;com.jcraft.jsch&lt;/code&gt; to connect to the SSH server. It is set to strictly check the fingerprint of the remote server against the accepted which are stored in couchDB.&lt;/p&gt;
&lt;h3 id=&#34;conventions&#34;&gt;Conventions&lt;/h3&gt;
&lt;p&gt;the sw360 user in FOSSology (the actual name is configured in &lt;code&gt;utilsSW360&lt;/code&gt;) &lt;strong&gt;must be a member of every group&lt;/strong&gt; to which it should be able to send Releases to be cleared.
File uploaded from SW360 are placed inside a folder with the same name as the group and permission will be set at the group level (default of cp2foss).&lt;/p&gt;
&lt;h3 id=&#34;datamodel-and-thrift-service&#34;&gt;Datamodel and thrift service&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;each Release object in SW360 can have only one attachment of type SOURCE.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;when a Release is sent &lt;em&gt;for the first time&lt;/em&gt; to FOSSology through the Thrift method &lt;code&gt;sendToFossology(1: string releaseId, 2: string clearingTeam )&lt;/code&gt; its SOURCE attachement is sent as stdin to the script &lt;code&gt;uploadFromSW360&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The field &lt;code&gt;map&amp;lt;string, FossologyStatus&amp;gt; clearingTeamToFossologyStatus&lt;/code&gt; is then updated to contain the corresponding entry for the chosen Clearing Team (aka. the name of the FOSSology group which will receives the upload for clearing).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;when the same Release is &lt;em&gt;sent again for another team&lt;/em&gt; a new &lt;em&gt;link&lt;/em&gt; in the corresponding group folder is created and the old upload is made available for the new group (as in giving permission using FO:&lt;code&gt;fo_chmod&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;At the moment this gives access only to the files, not to the relative clearing decision.
In order to make the clearing decisions available a reuser needs to be scheduled from the Jobs menu. [ it could be possible to schedule the job from SW360: its user is member of all the groups; but it is not currently implemented since there is no cli interface for reuser yet ]&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;when the current status is requested using the Thrift method &lt;code&gt;Release getStatusInFossology(1: string releaseId, 2: string clearingTeam )&lt;/code&gt; the newest status is fetched from FOSSology and it is stored in the map for the relative clearingTeam&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;notes&#34;&gt;Notes&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Releases have a ClearingState field, but this is ignored by the Thrift service and used only in the SW360 user interface.&lt;/li&gt;
&lt;li&gt;Projects link to Releases and the summary of their FOSSology status can be monitored. This is also ignored by the FOSSology Thrift service and handled by the Component service: the FOSSology service just updates the status of the Release objects.&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Liferay Friendly</title>
      <link>https://www.eclipse.org/sw360/docs/development/dev-liferay-friendly-url/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.eclipse.org/sw360/docs/development/dev-liferay-friendly-url/</guid>
      <description>
        
        
        &lt;p&gt;The normal generated portlet URLs containing a set of internal Liferay request parameters. &lt;br&gt;
These long URLs of links or forms are mostly not readable and its not easy to share it somewhere else.&lt;/p&gt;
&lt;p&gt;General Liferay portlet URL: &lt;br&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;http://localhost:8080/web/guest/examples?p_p_id=example_WAR_ExamplePortlet&amp;amp;p_p_lifecycle=1&amp;amp;p_p_state=normal&amp;amp;p_p_mode=view&amp;amp;p_p_col_id=column-1&amp;amp;p_p_col_count=1&amp;amp;_example_WAR_ExamplePortlet_javax.portlet.action=new
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Explanation of the Liferay request parameters: &lt;br&gt;
&lt;strong&gt;p_p_id:&lt;/strong&gt; The portlet ID (example_WAR_ExamplePortlet)&lt;br&gt;
&lt;strong&gt;p_p_state:&lt;/strong&gt; Liferay windows pages state - 1 (normal) 2 (maximize) 3 (minimize) &lt;br&gt;
&lt;strong&gt;p_p_mode&lt;/strong&gt;: Mode of the portlet look like - (view) (edit) (help) &lt;br&gt;
&lt;strong&gt;p_p_lifecycle:&lt;/strong&gt; This is life cycle of portlet - 0 (render) 1 (action) 2 (server) &lt;br&gt;
&lt;strong&gt;p_p_col_id:&lt;/strong&gt; The reference ID of the column in Liferay template &lt;br&gt;
&lt;strong&gt;p_p_col_pos:&lt;/strong&gt; Specifiy the column position if the the layout having more than one columns &lt;br&gt;
&lt;strong&gt;p_p_col_count:&lt;/strong&gt; Shows the no of columns in the current layout&lt;/p&gt;
&lt;h3 id=&#34;friendly-url-mapper-configuration&#34;&gt;Friendly URL Mapper configuration&lt;/h3&gt;
&lt;p&gt;Liferay provides a mechanism to shorten the generated URLs by using the Friendly URL Mapper feature. &lt;br&gt; &lt;br&gt;
How to configure the friendly URL Mapper in Liferay? &lt;br&gt; &lt;br&gt;
&lt;strong&gt;Configuration of URL routes in XML files&lt;/strong&gt; &lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;CREATE example-friendly-url-routes.xml&lt;/em&gt; &lt;br&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Xml&#34; data-lang=&#34;Xml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#099&#34;&gt;&amp;lt;?xml version=&amp;#34;1.0&amp;#34;?&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#099&#34;&gt;&amp;lt;!DOCTYPE routes PUBLIC &amp;#34;-//Liferay//DTD Friendly URL Routes 6.2.2//EN&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#099&#34;&gt;&amp;#34;http://www.liferay.com/dtd/liferay-friendly-url-routes_6_0_0.dtd&amp;#34;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;routes&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;route&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;pattern&amp;gt;&lt;/span&gt;/action/{actionName}&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/pattern&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;generated-parameter&lt;/span&gt; &lt;span style=&#34;color:#309&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;javax.portlet.action&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;{actionName}&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/generated-parameter&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;ignored-parameter&lt;/span&gt; &lt;span style=&#34;color:#309&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;p_auth&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;ignored-parameter&lt;/span&gt; &lt;span style=&#34;color:#309&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;p_p_id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;implicit-parameter&lt;/span&gt; &lt;span style=&#34;color:#309&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;p_p_lifecycle&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;1&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/implicit-parameter&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;implicit-parameter&lt;/span&gt; &lt;span style=&#34;color:#309&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;p_p_state&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;normal&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/implicit-parameter&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;implicit-parameter&lt;/span&gt; &lt;span style=&#34;color:#309&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;p_p_mode&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;view&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/implicit-parameter&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/route&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/routes&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Explanation of the Liferay Friendly Mapper route parameters: &lt;br&gt;
&lt;strong&gt;routes:&lt;/strong&gt; Routes element which contains all route entries &lt;br&gt;
&lt;strong&gt;route:&lt;/strong&gt; Single route element entry  &lt;br&gt;
&lt;strong&gt;pattern:&lt;/strong&gt; Pattern of the mapped friendly URL (visible in address bar) &lt;br&gt;
&lt;strong&gt;generated-parameter:&lt;/strong&gt; These parameters will be generated from parameters in the request URL &lt;br&gt;
&lt;strong&gt;ignored-parameter:&lt;/strong&gt; These parameters will be igored and not included in generated URLs &lt;br&gt;
&lt;strong&gt;implicit-parameter:&lt;/strong&gt; Used for static attributes which can be ignored by recognition &lt;br&gt;
&lt;strong&gt;overridden-parameter:&lt;/strong&gt; Parameter that should be set to a certain value when a URL is recognized &lt;br&gt;
&lt;br&gt;
It is necessary to order the parameters as described above. &lt;br&gt;
These files should located in the resources folder otherwise they will not be available on Apache Tomcat and cannot be initialized by Liferay. &lt;br&gt;
&lt;br&gt;
&lt;strong&gt;Configuration of friendly URL Java class&lt;/strong&gt; &lt;br&gt;
&lt;br&gt;
&lt;em&gt;MODIFY liferay-portlet.xml&lt;/em&gt;
&lt;br&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Xml&#34; data-lang=&#34;Xml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;friendly-url-mapper-class&amp;gt;&lt;/span&gt;com.liferay.portal.kernel.portlet.DefaultFriendlyURLMapper&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/friendly-url-mapper-class&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;friendly-url-mapping&amp;gt;&lt;/span&gt;example&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/friendly-url-mapping&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;friendly-url-routes&amp;gt;&lt;/span&gt;com/.../example-friendly-url-routes.xml&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/friendly-url-routes&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
In the next step we need one java implementation class to generate the Liferay friendly URLs. &lt;br&gt;
&lt;p&gt;Liferay provides the &lt;em&gt;DefaultFriendlyURLMapper&lt;/em&gt; class to create the URLs based on our rules. &lt;br&gt;&lt;/p&gt;
&lt;p&gt;The Liferay Friendly URL Mapper configuration is placed after &lt;code&gt;&amp;lt;icon/&amp;gt;&lt;/code&gt; and before &lt;code&gt;&amp;lt;instanceable&amp;gt;&lt;/code&gt;
tag.&lt;/p&gt;
&lt;h3 id=&#34;friendly-url-mapper-outcome&#34;&gt;Friendly URL Mapper outcome&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Liferay will generate the following friendly URL&lt;/strong&gt; &lt;br&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Bash&#34; data-lang=&#34;Bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;http://localhost:8080/web/guest/examples/-/example/action/new
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;ol&gt;
&lt;li&gt;The liferay framework will add &amp;ldquo;-&amp;rdquo; (dash)&lt;/li&gt;
&lt;li&gt;Friendly URL mapper name which is configured in &lt;code&gt;&amp;lt;friendly-url-mapping&amp;gt;&lt;/code&gt; (liferay-portlet.xml) element&lt;/li&gt;
&lt;li&gt;Pattern name with generated parameters which is same as in &lt;code&gt;&amp;lt;pattern&amp;gt;&lt;/code&gt; (example-friendly-url-routes.xml) defined.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;additional&#34;&gt;Additional&lt;/h3&gt;
&lt;p&gt;Friendly URL Mapper functionality is not working if the portletURL API is used to generate the Liferay URL in local Javascript. &lt;br&gt;
It is helpful to generate &lt;code&gt;&amp;lt;portlet:renderURL&amp;gt;&lt;/code&gt; placeholder and replace them by using dummy values.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Moderation Requests</title>
      <link>https://www.eclipse.org/sw360/docs/development/dev-moderation-requests/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.eclipse.org/sw360/docs/development/dev-moderation-requests/</guid>
      <description>
        
        
        &lt;p&gt;The concept of moderation is good for two things:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;to cope with a large number of potential edits on documents.&lt;/li&gt;
&lt;li&gt;to allow every user to propose edits.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Allowing every user to edit opposed to propose edits would lad to a large number of changes, potentially, not making everyone happy. As such, the changes should be reviewed by an experienced person and can be then approved.&lt;/p&gt;
&lt;h2 id=&#34;application-flow&#34;&gt;Application Flow&lt;/h2&gt;
&lt;p&gt;A user changes a moderated document, which are component, release, project and todo&amp;rsquo;s of licenses (and the white list):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The user switches in edit mode and applies a change.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The user submits the change by clicking &amp;ldquo;Update &amp;hellip;&amp;rdquo;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The application checks, if the permissions are sufficient&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For sufficient permissions, see here: &lt;a href=&#34;https://github.com/siemens/sw360portal/wiki/Dev-Role-Authorisation-Model&#34;&gt;https://github.com/siemens/sw360portal/wiki/Dev-Role-Authorisation-Model&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If the permissions do not allow the edit right away, a moderation request is created.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Moderators can see the moderation request in the moderation portlet&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Having selected the moderation request, the moderator can accept the request, decline, postpone or remove himself from the list of moderators&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;technical-description&#34;&gt;Technical Description&lt;/h2&gt;
&lt;h3 id=&#34;checking-document-permissions&#34;&gt;Checking Document Permissions&lt;/h3&gt;
&lt;p&gt;If a moderation requests needs to be created, because the user does not have sufficient permissions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The request goes through the stack, for example: project portlet, project handler, project database handler.&lt;/li&gt;
&lt;li&gt;Then the project database handler checks for permissions using &lt;code&gt;makePermission()&lt;/code&gt; (&lt;code&gt;DocumentPermission&lt;/code&gt; is the base class, then &lt;code&gt;ProjectPermissions&lt;/code&gt; is the referring here for projects) and &lt;code&gt;isActionAllowed()&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;For moderation requests, we assume that this action is not allowed. Then, the &lt;code&gt;ProjectModerator&lt;/code&gt; is called (see package &lt;code&gt;...sw360.datahandler.entitlement&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;This class (which is part of the project service) creates a thrift client to the moderation service (also on the backend) and creates a moderation request using this client.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Every moderation request is created using the thrift-based API.&lt;/p&gt;
&lt;h3 id=&#34;writing-a-moderation-request-to-the-database&#34;&gt;Writing a Moderation Request to the Database&lt;/h3&gt;
&lt;p&gt;The generation of moderation request is performed by the moderation service. The moderation service handles incoming request in the following way:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The requests arrives in the &lt;code&gt;ModerationDatabaseHandler&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;This handler writes the request to the database.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;creation-details-in-the-service&#34;&gt;Creation Details in the Service&lt;/h3&gt;
&lt;p&gt;The handler writes one moderation request per user and document. If a moderation request from the same user for the same document exists, added moderation requests are merged. Or, the request is new either with a new user, new document or both, then the moderation request is created.&lt;/p&gt;
&lt;p&gt;Each moderation requests has recipients, the moderators. The moderation database handler selects the moderators depending on the document type, which are usually the creator of the document and the listed moderators for this document. See details in the &lt;code&gt;ModerationDatabaseHandler&lt;/code&gt; class. At the same location the check for deletion is performed.&lt;/p&gt;
&lt;h3 id=&#34;what-is-in-the-database&#34;&gt;What is in the Database?&lt;/h3&gt;
&lt;p&gt;The moderation request is a document in the couchdb. Technically, the moderation requests holds the affected document as field where the values is a nested JSON dictionary.&lt;/p&gt;
&lt;p&gt;The following screen shot shows an example for a moderation request for a project.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/wiki/siemens/sw360portal/images/036-oss-sw360-20160310-screenshot-moderation-reqeust-document-example.png&#34; alt=&#34;Example Moderation Request in Database&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;evaluating-the-moderation-request&#34;&gt;Evaluating the Moderation Request&lt;/h3&gt;
&lt;p&gt;On the moderation portlet all moderations will be shown, for which the user is a moderator.
Only open moderation requests can be selected. Approved and declined moderation requests will only be shown.
On selecting the moderation requests, both documents (original and the updated out of the moderation request) will be compared in the &lt;code&gt;merge.jsp&lt;/code&gt; and all differences will be shown to the moderator. This is done via tags such as the &lt;code&gt;sw360:CompareProject&lt;/code&gt;-tag. Opening the detailed view of the moderation request changes the state to &lt;code&gt;in progress&lt;/code&gt; to show other moderators that the moderation request is in work.&lt;/p&gt;
&lt;p&gt;The following actions are possible:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Accept request&lt;/code&gt;: the document within the moderation request will be accepted and written to the DB via e.g. the &lt;code&gt;ProjectService&lt;/code&gt;. The state is set to &lt;code&gt;ACCEPTED&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Remove Me from Moderators&lt;/code&gt;: the state of the moderation requests is set to &lt;code&gt;PENDING&lt;/code&gt; again and the logged in moderator will be removed from the moderation list.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Decline request&lt;/code&gt;: the moderation requests will be set to &lt;code&gt;REJECTED&lt;/code&gt; and still shown in the list&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Postpone request&lt;/code&gt;: the state will be &lt;code&gt;IN PROGRESS&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Cancel&lt;/code&gt;: the moderation state is set to &lt;code&gt;PENDING&lt;/code&gt; and the moderation request will still be shown in the moderation request list&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Release and Versioning</title>
      <link>https://www.eclipse.org/sw360/docs/development/dev-releasing-sw360/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.eclipse.org/sw360/docs/development/dev-releasing-sw360/</guid>
      <description>
        
        
        &lt;p&gt;We have the following main principles for versioning and releases. We consider &lt;a href=&#34;http://semver.org/&#34;&gt;semantic versioning&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Given a version number MAJOR.MINOR.PATCH, increment the:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;MAJOR version when you make incompatible API changes,&lt;/li&gt;
&lt;li&gt;MINOR version when you add functionality in a backwards-compatible manner, and&lt;/li&gt;
&lt;li&gt;PATCH version when you make backwards-compatible bug fixes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Additional labels for pre-release and build metadata are available as extensions to the MAJOR.MINOR.PATCH format.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;with the following implementation in our project:&lt;/p&gt;
&lt;h3 id=&#34;major-version&#34;&gt;Major Version&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;API breaking changes are considered for the upcoming REST API.&lt;/li&gt;
&lt;li&gt;Breaking change is &lt;em&gt;also&lt;/em&gt; if a migration script is required for the data base.&lt;/li&gt;
&lt;li&gt;Thrift API is not considered a public API anymore.&lt;/li&gt;
&lt;li&gt;Therefore milestones cannot correspond to our versions like &lt;code&gt;1.4&lt;/code&gt;, &lt;code&gt;1.5&lt;/code&gt;, etc. anymore: we do not know which feature or issue will cause a version jump according to semantic versioning guidelines.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;minor-version&#34;&gt;Minor Version&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Changes to the thrift API will cause minor version increment.&lt;/li&gt;
&lt;li&gt;Larger new functionality which is backwards compatible, maybe one pull requests or maybe a group of pull requests.&lt;/li&gt;
&lt;li&gt;Minor versions requires also tagging in the repo.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;patch-level&#34;&gt;Patch Level&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Every push (merged pull request) to master shall generate &lt;em&gt;at least&lt;/em&gt; (not there yet) a new patch level version, in order to allow for (clean) deployments at this level.&lt;/li&gt;
&lt;li&gt;Could e also minor improvements like adding a button with some functionality&lt;/li&gt;
&lt;li&gt;Patch level is not tagged.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;naming-and-meaning-of-milestones&#34;&gt;Naming and Meaning of Milestones&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Milestones cannot correspond to versions (releases) anymore, because in general the version designator is determined by the level of change.&lt;/li&gt;
&lt;li&gt;We use milestones as work packages. We see them as work packages from an organizational point of view. However, it is not a milestone to release a version, because - again in general - the version is determined by the level of change.&lt;/li&gt;
&lt;li&gt;However, If the last merged pull quest of a work package, a completing merge: If it is not causing a major or minor version increment, still, this would lead to a minor version increment.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;technical-implementation&#34;&gt;Technical Implementation&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Plan: The artifacts will be build by travis and stored on aws S3 (not there yet) with patch level version increments, but patch level versions will not lead to a tag in the repo.&lt;/li&gt;
&lt;li&gt;Currently, the versioning is &amp;ldquo;manual maven based&amp;rdquo;, we look for a cleaner more automated approach.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;technical-maven-universe-how-to-maketag-a-release&#34;&gt;Technical: Maven Universe How to make/tag a release⁽¹⁾:&lt;/h1&gt;
&lt;p&gt;The following information refers to the existing maven-based versioning scheme, as of now we are looking into a system which is not leading to a temporary change in the repo, commit, and then reverting changes.&lt;/p&gt;
&lt;p&gt;Let us assume, that we want to tag the version &lt;strong&gt;1.2.0&lt;/strong&gt; and that the current version in the pom&amp;rsquo;s is &lt;strong&gt;1.2.0-SNAPSHOT&lt;/strong&gt;.&lt;/p&gt;
&lt;h3 id=&#34;0-work-in-a-clean-environment&#34;&gt;0. Work in a clean environment&lt;/h3&gt;
&lt;p&gt;Especially should all poms be without uncommitted changes. The safe way is to start with:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Bash&#34; data-lang=&#34;Bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ &lt;span style=&#34;color:#366&#34;&gt;cd&lt;/span&gt; /tmp/
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ git clone https://github.com/eclipse/sw360.git
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ &lt;span style=&#34;color:#366&#34;&gt;cd&lt;/span&gt; sw360portal
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;1-write-the-version-of-the-release-into-the-poms&#34;&gt;1. Write the version of the release into the poms&lt;/h3&gt;
&lt;pre&gt;
$ mvn versions:set -DnewVersion=&lt;b&gt;1.2.0&lt;/b&gt;
$ git add pom.xml \*\*/pom.xml
$ git commit -m &#34;set version to &lt;b&gt;1.2.0&lt;/b&gt;&#34;
&lt;/pre&gt;
&lt;p&gt;This will actually edit all pom.xml files and change the versions to &lt;strong&gt;1.2.0&lt;/strong&gt;, i.e. remove the SNAPSHOT.&lt;/p&gt;
&lt;h3 id=&#34;2-test-the-project&#34;&gt;2. Test the project&lt;/h3&gt;
&lt;pre&gt;
$ mvn install
&lt;/pre&gt;
&lt;p&gt;or even better: use vagrant.&lt;/p&gt;
&lt;h3 id=&#34;3-create-and-push-the-tag&#34;&gt;3. Create and push the tag&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Bash&#34; data-lang=&#34;Bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ mvn scm:tag
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This creates the tag and &lt;strong&gt;pushes it to github&lt;/strong&gt;.&lt;/p&gt;
&lt;h3 id=&#34;4-write-the-new-incremented-snapshot-version-into-the-poms&#34;&gt;4. Write the new incremented SNAPSHOT-version into the poms&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Bash&#34; data-lang=&#34;Bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ mvn versions:set -DnewVersion&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&amp;lt;b&amp;gt;1.3.0-SNAPSHOT&amp;lt;/b&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ git add pom.xml &lt;span style=&#34;color:#c30;font-weight:bold&#34;&gt;\*\*&lt;/span&gt;/pom.xml
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ git commit -m &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;set version to &amp;lt;b&amp;gt;1.3.0-SNAPSHOT&amp;lt;/b&amp;gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ git push origin master
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&amp;ndash;
⁽¹⁾ based on: &lt;a href=&#34;https://axelfontaine.com/blog/final-nail.html&#34;&gt;https://axelfontaine.com/blog/final-nail.html&lt;/a&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Roles and Authorization</title>
      <link>https://www.eclipse.org/sw360/docs/development/dev-role-authorisation-model/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.eclipse.org/sw360/docs/development/dev-role-authorisation-model/</guid>
      <description>
        
        
        &lt;p&gt;Like any other system, SW360 allows for setting different levels of access for different users. Technically, the decision when user should be able to see or to do something happens (generally) on the backend server. This ensures consistency between the REST API and the portal application.&lt;/p&gt;
&lt;p&gt;For setting roles of a user, the Liferay control panel is being used (Admin menu -&amp;gt; Control Panel -&amp;gt; Users and Organisations -&amp;gt; Users -&amp;gt; select one user and Edit -&amp;gt; Roles). Setting access at individual records happens in the edit view of that record.&lt;/p&gt;
&lt;h2 id=&#34;roles-overview&#34;&gt;Roles Overview&lt;/h2&gt;
&lt;p&gt;SW360 offers two choices for doing the roles: one is setting access rights at every record individually. Another are general roles that can be set for every user. An admin of SW360 can set user roles at the Liferay Users and Roles UI.&lt;/p&gt;
&lt;h4 id=&#34;setup-admin-liferay-role&#34;&gt;Setup Admin (Liferay Role)&lt;/h4&gt;
&lt;p&gt;The setup admin is the Liferay administrator, which can configure the entire liferay app, such as which portlets are shown on which page.&lt;/p&gt;
&lt;h4 id=&#34;sw360-admin-liferay-role&#34;&gt;SW360 Admin (Liferay Role)&lt;/h4&gt;
&lt;p&gt;The SW360 admin can change all data and promote users for more access rights, such as promoting a user to role &lt;code&gt;CLEARING_ADMIN&lt;/code&gt;. This role can change data from other groups, limited by visibility setting of a project.&lt;/p&gt;
&lt;h4 id=&#34;clearing-admin-liferay-role&#34;&gt;Clearing Admin (Liferay Role)&lt;/h4&gt;
&lt;p&gt;The clearing admin can change all component and release records and project records of the same group. This can be seen as group administrator.&lt;/p&gt;
&lt;h4 id=&#34;security-admin-liferay-role&#34;&gt;Security Admin (Liferay Role)&lt;/h4&gt;
&lt;p&gt;In addition to the user rights, the security admin can set security vulnerabilities to irrelevant&lt;/p&gt;
&lt;h4 id=&#34;ecc-admin-liferay-role&#34;&gt;ECC Admin (Liferay Role)&lt;/h4&gt;
&lt;p&gt;In addition to the user rights, the ECC admin can manipulate ECC data.&lt;/p&gt;
&lt;h4 id=&#34;user&#34;&gt;User&lt;/h4&gt;
&lt;p&gt;A user can create, modify and delete all own (=self created) records. A user cannot change records of others&lt;/p&gt;
&lt;h3 id=&#34;moderation-requests&#34;&gt;Moderation Requests&lt;/h3&gt;
&lt;p&gt;If a user with user or other access role rights is not entitled to write or change a record, a moderation request will be created. The moderation request contains the changes an will be routed for approval to the users who can write this record.&lt;/p&gt;
&lt;p&gt;In addition there are ACL-style roles, meaning that per data item access settings can be made:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;creator&lt;/strong&gt; - a creator can modify in addition to the user&amp;rsquo;s read abilities, a user can be creator of a data item&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;moderator&lt;/strong&gt; - a creator can define moderators for a data item. Moderators can change a data item as a creator can.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;contributor&lt;/strong&gt; (Component) - is a contributor to a component, project, similar (but not the same) to a moderator. In addition to moderator, this role has been added to identify contributors (or that contributors get the fame).
In contrast, the contributor cannot delete data items.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;project responsible&lt;/strong&gt; (Project) - is a contributor, just named differently to identify the responsible person.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;lead architect&lt;/strong&gt; (Project) - is a contributor, just named differently to identify the responsible person. an architect refers to the person who has that role of the project or product. This role has been added to identify architects to have a contact person for technical questions.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;contact&lt;/strong&gt; (Release) - deprecated, should be renamed to contributor see #100.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;group (department)&lt;/code&gt;, &lt;code&gt;contributor&lt;/code&gt;, &lt;code&gt;moderator&lt;/code&gt; and &lt;code&gt;owner&lt;/code&gt; roles are entity specific, &lt;code&gt;user&lt;/code&gt;, &lt;code&gt;clearing admin&lt;/code&gt; and &lt;code&gt;admin&lt;/code&gt; are roles assigned to a user.&lt;/p&gt;
&lt;h3 id=&#34;additional-project-visibility&#34;&gt;Additional Project Visibility&lt;/h3&gt;
&lt;p&gt;In addition to the roles mentioned above, each project has a separate visibility setting (technically an attribute of the project document). There are four project visibility levels:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Private - no one but the creator can read.&lt;/li&gt;
&lt;li&gt;Me and moderators - involves all moderators and contributors, basically all names that are named among the attributes (lead architect, project responsible, contributors)&lt;/li&gt;
&lt;li&gt;Department / business unit (should be renamed) - refer to the group the users are in.&lt;/li&gt;
&lt;li&gt;Public - all registered users of the liferay / sw360 application (login required).&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The access rules are implemented in&lt;code&gt;lib-datahandler&lt;/code&gt;. In the package, &lt;code&gt;com.siemens.sw360.datahandler.permissions&lt;/code&gt; this is implemented in &lt;code&gt;ProjectPermissions&lt;/code&gt;. See methods &lt;code&gt;isVisible&lt;/code&gt; and &lt;code&gt;userIsEquivalentToModeratorinProject()&lt;/code&gt; for the actual rules.&lt;/p&gt;
&lt;h3 id=&#34;overall-access-matrix&#34;&gt;Overall Access Matrix&lt;/h3&gt;
&lt;p&gt;The following table presents the SW360 Role-Authorisation-Model.&lt;/p&gt;
&lt;p&gt;The row specifies which action to take, the column the role of the actor. Cell entries specify which entity type can be acted upon.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;creator&lt;/th&gt;
&lt;th&gt;moderator&lt;/th&gt;
&lt;th&gt;contributor&lt;/th&gt;
&lt;th&gt;user&lt;/th&gt;
&lt;th&gt;clearing admin&lt;/th&gt;
&lt;th&gt;(sw360)admin&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;create&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;PCRV&lt;/td&gt;
&lt;td&gt;PCRVL&lt;/td&gt;
&lt;td&gt;PCRVL&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;read&lt;/td&gt;
&lt;td&gt;P&lt;/td&gt;
&lt;td&gt;P&lt;/td&gt;
&lt;td&gt;P&lt;/td&gt;
&lt;td&gt;(P²)CRVL&lt;/td&gt;
&lt;td&gt;(P²)CRVL&lt;/td&gt;
&lt;td&gt;PCRVL&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;edit&lt;/td&gt;
&lt;td&gt;PCR&lt;/td&gt;
&lt;td&gt;PCR&lt;/td&gt;
&lt;td&gt;PCR&lt;/td&gt;
&lt;td&gt;(all created ones)&lt;/td&gt;
&lt;td&gt;PCRVL&lt;/td&gt;
&lt;td&gt;PCRVL&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;delete&lt;/td&gt;
&lt;td&gt;PCR&lt;/td&gt;
&lt;td&gt;PCR&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;(all created ones)&lt;/td&gt;
&lt;td&gt;L&lt;/td&gt;
&lt;td&gt;PCRVL&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;P² : only if the user is member of the group of the project (or has created the project)&lt;/p&gt;
&lt;p&gt;Note that ECC Admins and Security Admins have only the ability to write ECC and security data respectively at given records. However, as for the other access rights this role does not enhance anything above users.&lt;/p&gt;
&lt;h4 id=&#34;legend&#34;&gt;Legend&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;acronym&lt;/th&gt;
&lt;th&gt;description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;P&lt;/td&gt;
&lt;td&gt;project&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;C&lt;/td&gt;
&lt;td&gt;component&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;R&lt;/td&gt;
&lt;td&gt;release&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;V&lt;/td&gt;
&lt;td&gt;vendor&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;L&lt;/td&gt;
&lt;td&gt;license&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;technical-info&#34;&gt;Technical Info&lt;/h2&gt;
&lt;p&gt;The role access rules are put into &lt;code&gt;lib-datahandler&lt;/code&gt;. In the package, &lt;code&gt;com.siemens.sw360.datahandler.permissions&lt;/code&gt; there are implementing classes of a template class &lt;code&gt;DocumentPermissions&lt;/code&gt;. As an example, &lt;code&gt;ProjectPermissions&lt;/code&gt; extends abstract class &lt;code&gt;DocumentPermissions&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;At run time, a permissions object consisting of a document and a user is created: In &lt;code&gt;PermissionUtils&lt;/code&gt; (same package) there is a static method &lt;code&gt;makePermissions&amp;lt;T&amp;gt;()&lt;/code&gt; that creates a permissions object. The received permissions object instance can be asked if a particular operation is allowed.&lt;/p&gt;
&lt;p&gt;Note that the general application of these permission operations runs in the backend (Thrift services). An application in the front end of &lt;code&gt;PermissionUtils&lt;/code&gt; for example, is for displaying buttons depending on the user main role (user, clearing admin or admin). Then the portlet makes plain use of the &lt;code&gt;lib-datahandler&lt;/code&gt; library.&lt;/p&gt;
&lt;h2 id=&#34;further-plans&#34;&gt;Further plans&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Actually, creating stuff should be checked in lib-datahandler, starting with creation of licenses,which should ot be permitted to users: &lt;a href=&#34;https://github.com/siemens/sw360portal/issues/106&#34;&gt;Issue #106&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/siemens/sw360portal/issues/101&#34;&gt;Issue #101&lt;/a&gt; for&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;contributor&lt;/th&gt;
&lt;th&gt;moderator&lt;/th&gt;
&lt;th&gt;creator&lt;/th&gt;
&lt;th&gt;user&lt;/th&gt;
&lt;th&gt;clearing admin&lt;/th&gt;
&lt;th&gt;admin&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;download OSS sources&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;R&lt;/td&gt;
&lt;td&gt;R&lt;/td&gt;
&lt;td&gt;R&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;download internal sources&lt;/td&gt;
&lt;td&gt;R&lt;/td&gt;
&lt;td&gt;R&lt;/td&gt;
&lt;td&gt;R&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;R&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/siemens/sw360portal/issues/102&#34;&gt;Issue #102&lt;/a&gt; for&lt;/li&gt;
&lt;/ol&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;contributor&lt;/th&gt;
&lt;th&gt;moderator&lt;/th&gt;
&lt;th&gt;creator&lt;/th&gt;
&lt;th&gt;user&lt;/th&gt;
&lt;th&gt;clearing admin&lt;/th&gt;
&lt;th&gt;admin&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;send to clearing&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;P&lt;/td&gt;
&lt;td&gt;P&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;PCRL&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/siemens/sw360portal/issues/103&#34;&gt;Issue #103&lt;/a&gt; for&lt;/li&gt;
&lt;/ol&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;contributor&lt;/th&gt;
&lt;th&gt;moderator&lt;/th&gt;
&lt;th&gt;creator&lt;/th&gt;
&lt;th&gt;user&lt;/th&gt;
&lt;th&gt;clearing admin&lt;/th&gt;
&lt;th&gt;admin&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;edit clearing report&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;R&lt;/td&gt;
&lt;td&gt;R&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;R?&lt;/td&gt;
&lt;td&gt;PCRL&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Semantic Commits</title>
      <link>https://www.eclipse.org/sw360/docs/development/dev-semantic-commits/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.eclipse.org/sw360/docs/development/dev-semantic-commits/</guid>
      <description>
        
        
        &lt;h2 id=&#34;the-reason-and-benefit-of-semantic-commit-messages&#34;&gt;The reason and benefit of semantic commit messages&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;automatic generating of the changelog&lt;/li&gt;
&lt;li&gt;simple navigation through git history (e.g. ignoring style changes)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;semantic-commit-message-structure&#34;&gt;Semantic commit message structure&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;type&amp;gt;(&amp;lt;scope&amp;gt;): &amp;lt;commit message&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;the-following-types-are-supported&#34;&gt;The following &lt;types&gt; are supported&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;feat (new feature for the user, not a new feature for build script)&lt;/li&gt;
&lt;li&gt;fix (bug fix for the user, not a fix to a build script)&lt;/li&gt;
&lt;li&gt;docs (changes to the documentation)&lt;/li&gt;
&lt;li&gt;style (formatting, missing semi colons, etc; no production code change)&lt;/li&gt;
&lt;li&gt;refactor (refactoring production code, eg. renaming a variable)&lt;/li&gt;
&lt;li&gt;test (adding missing tests, refactoring tests; no production code change)&lt;/li&gt;
&lt;li&gt;chore (updating grunt tasks etc; no production code change)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Example &lt;scope&gt; values:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ui (user interface)&lt;/li&gt;
&lt;li&gt;rest (REST API)&lt;/li&gt;
&lt;li&gt;thrift (apache thrift services)&lt;/li&gt;
&lt;li&gt;project (project portlet)&lt;/li&gt;
&lt;li&gt;component (component portlet)&lt;/li&gt;
&lt;li&gt;user (user portlet)&lt;/li&gt;
&lt;li&gt;etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;example-of-semantic-commit-message&#34;&gt;Example of semantic commit message&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;fix(rest): change maven plugin order to generate the documentation correctly&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;type&amp;gt;(&amp;lt;scope&amp;gt;): &amp;lt;commit message&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;referencing-issues&#34;&gt;Referencing issues&lt;/h2&gt;
&lt;p&gt;Please reference in the pull request to the open issue&lt;/p&gt;
&lt;p&gt;&lt;code&gt;closes eclipse/sw360#&amp;lt;issue-number&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;closes eclipse/sw360#758&lt;/code&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Testing Frameworks</title>
      <link>https://www.eclipse.org/sw360/docs/development/dev-testing-frameworks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.eclipse.org/sw360/docs/development/dev-testing-frameworks/</guid>
      <description>
        
        
        &lt;p&gt;The implementation of complicated rules is not always easy to read.
A good way to document and explain the behaviour of rule engines are natural language tests.
A frame work we use for that is &lt;a href=&#34;http://jgiven.org/&#34;&gt;jgiven&lt;/a&gt;.
We write the tests using the [dataprovider] (&lt;a href=&#34;https://github.com/TNG/junit-dataprovider&#34;&gt;https://github.com/TNG/junit-dataprovider&lt;/a&gt;) runner.
This is basically a runner that allows to use parametrized tests.&lt;/p&gt;
&lt;p&gt;The basic testing frame work is still &lt;a href=&#34;http://junit.org/&#34;&gt;JUnit4&lt;/a&gt;, assertions are made using &lt;a href=&#34;https://code.google.com/p/hamcrest/wiki/Tutorial&#34;&gt;hamcrest&lt;/a&gt; and we mock complicated input classes with &lt;a href=&#34;http://mockito.org/&#34;&gt;mockito&lt;/a&gt;.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Troubleshooting</title>
      <link>https://www.eclipse.org/sw360/docs/development/dev-troubleshooting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.eclipse.org/sw360/docs/development/dev-troubleshooting/</guid>
      <description>
        
        
        &lt;h3 id=&#34;development-problems-building-sw360portal-with-maven&#34;&gt;Development: problems building sw360portal with maven?&lt;/h3&gt;
&lt;p&gt;Before building the sw360portal with maven, ensure that the following components are installed in the development environment:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A git client&lt;/li&gt;
&lt;li&gt;Apache Maven 3.0.X&lt;/li&gt;
&lt;li&gt;Apache Thrift 0.9.3&lt;/li&gt;
&lt;li&gt;Java 1.8.X&lt;/li&gt;
&lt;li&gt;CouchDB, at least 1.5 (only if the tests will be executed locally)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;development-problems-using-eclipse&#34;&gt;Development: problems using Eclipse?&lt;/h3&gt;
&lt;p&gt;Please do not use Eclipse, because the integration of Apache Thrift is an open issue and we found no plugin for Eclipse to solve the shown compiler errors.
Recommended is IntelliJ IDEA or NetBeans.&lt;/p&gt;
&lt;h3 id=&#34;liferay-problems-with-displaying-changes-to-page&#34;&gt;Liferay: problems with displaying changes to page?&lt;/h3&gt;
&lt;p&gt;When developing changes to a page and these changes do not show in browser - even after redeployment, then the internal liferay optimisation mechanisms may kick in. Try to add to the URL string the following key value parameters:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;js_fast_load=0&amp;amp;css_fast_load=0&amp;amp;strip=0
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;liferay-where-are-the-initial-admin-user-settings&#34;&gt;Liferay: where are the initial admin user settings?&lt;/h3&gt;
&lt;p&gt;It is the file &lt;code&gt;portal-ext.properties&lt;/code&gt; in sw360/opt.&lt;/p&gt;
&lt;h3 id=&#34;maven-build-generally-fails&#34;&gt;Maven: build generally fails&lt;/h3&gt;
&lt;p&gt;You just try to compile parts or all of it and it fails? Most of the stuff depends on the module /build-configuration. Execute either &amp;ldquo;mvn install&amp;rdquo; on top level or inside build configuration.&lt;/p&gt;
&lt;h4 id=&#34;backend-problems-with-company-proxy&#34;&gt;Backend: problems with company proxy?&lt;/h4&gt;
&lt;p&gt;maybe try instead:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/opt/apache-tomcat-/bin/startup.sh
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;just this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;CATALINA_OPTS=&amp;#34;-Dhttps.proxy...&amp;#34; /opt/apache-tomcat-/bin/startup.sh
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;for lucene it might be necessary to add:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[httpd_global_handlers]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;_fti = {couch_httpd_proxy, handle_proxy_req, &amp;lt;&amp;lt;&amp;#34;http://127.0.0.1:8085/couchdblucene&amp;#34;&amp;gt;&amp;gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;in lucene.ini of local.d of your CouchDB installation&lt;/p&gt;
&lt;h4 id=&#34;backend-are-thrift-services-up&#34;&gt;Backend: are thrift services up?&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;Check tomcat manager (if the services are there)&lt;/li&gt;
&lt;li&gt;Check if the service is accessible:
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;http://your.url.to.server.com:8085/components  
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;Should return &amp;ldquo;Welcome to &amp;hellip;&amp;rdquo;.&lt;/li&gt;
&lt;li&gt;Check if the service thrift page is there:
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;http://your.url.to.server.com:8085/components/thrift
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;Should return HTTP status code 500, because in the browser, no valid thrift message was formed.&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;backend-orgektorpdbaccessexception&#34;&gt;Backend: org.ektorp.DbAccessException&lt;/h4&gt;
&lt;p&gt;What do I do if I get: org.ektorp.DbAccessException: com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field &amp;ldquo;_id&amp;rdquo;&lt;/p&gt;
&lt;p&gt;You add the class you have been trying to serialize to
THRIFT_CLASSES in
sw360/src/libraries/lib-datahandler/src/main/java/com/siemens/sw360/datahandler/thrift/ThriftUtils.java&lt;/p&gt;
&lt;h4 id=&#34;backend-maven-failed-tomcat7-deploy&#34;&gt;Backend: maven failed tomcat7 deploy&lt;/h4&gt;
&lt;p&gt;If the deployment via maven of the backend does fail with an error like this&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Bash&#34; data-lang=&#34;Bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Uploading: http://localhost:8085/manager/text/deploy?path&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;%2Flicenses
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2302/17930 KB   
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Uploading: http://localhost:8085/manager/text/deploy?path&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;%2Flicenses
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2102/17930 KB   
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Uploading: http://localhost:8085/manager/text/deploy?path&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;%2Flicenses
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2064/17930 KB   
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Uploading: http://localhost:8085/manager/text/deploy?path&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;%2Flicenses
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2064/17930 KB   
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#555&#34;&gt;[&lt;/span&gt;INFO&lt;span style=&#34;color:#555&#34;&gt;]&lt;/span&gt; ------------------------------------------------------------------------
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#555&#34;&gt;[&lt;/span&gt;INFO&lt;span style=&#34;color:#555&#34;&gt;]&lt;/span&gt; Reactor Summary:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#555&#34;&gt;[&lt;/span&gt;INFO&lt;span style=&#34;color:#555&#34;&gt;]&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#555&#34;&gt;[&lt;/span&gt;INFO&lt;span style=&#34;color:#555&#34;&gt;]&lt;/span&gt; backend ........................................... SUCCESS &lt;span style=&#34;color:#555&#34;&gt;[&lt;/span&gt;2.579s&lt;span style=&#34;color:#555&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#555&#34;&gt;[&lt;/span&gt;INFO&lt;span style=&#34;color:#555&#34;&gt;]&lt;/span&gt; backend-src ....................................... SUCCESS &lt;span style=&#34;color:#555&#34;&gt;[&lt;/span&gt;0.058s&lt;span style=&#34;color:#555&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#555&#34;&gt;[&lt;/span&gt;INFO&lt;span style=&#34;color:#555&#34;&gt;]&lt;/span&gt; src-licenses ...................................... SUCCESS &lt;span style=&#34;color:#555&#34;&gt;[&lt;/span&gt;10.544s&lt;span style=&#34;color:#555&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#555&#34;&gt;[&lt;/span&gt;INFO&lt;span style=&#34;color:#555&#34;&gt;]&lt;/span&gt; src-users ......................................... SUCCESS &lt;span style=&#34;color:#555&#34;&gt;[&lt;/span&gt;1.485s&lt;span style=&#34;color:#555&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#555&#34;&gt;[&lt;/span&gt;INFO&lt;span style=&#34;color:#555&#34;&gt;]&lt;/span&gt; src-vendors ....................................... SUCCESS &lt;span style=&#34;color:#555&#34;&gt;[&lt;/span&gt;6.929s&lt;span style=&#34;color:#555&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#555&#34;&gt;[&lt;/span&gt;INFO&lt;span style=&#34;color:#555&#34;&gt;]&lt;/span&gt; src-search ........................................ SUCCESS &lt;span style=&#34;color:#555&#34;&gt;[&lt;/span&gt;5.837s&lt;span style=&#34;color:#555&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#555&#34;&gt;[&lt;/span&gt;INFO&lt;span style=&#34;color:#555&#34;&gt;]&lt;/span&gt; src-components .................................... SUCCESS &lt;span style=&#34;color:#555&#34;&gt;[&lt;/span&gt;19.439s&lt;span style=&#34;color:#555&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#555&#34;&gt;[&lt;/span&gt;INFO&lt;span style=&#34;color:#555&#34;&gt;]&lt;/span&gt; src-projects ...................................... SUCCESS &lt;span style=&#34;color:#555&#34;&gt;[&lt;/span&gt;14.280s&lt;span style=&#34;color:#555&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#555&#34;&gt;[&lt;/span&gt;INFO&lt;span style=&#34;color:#555&#34;&gt;]&lt;/span&gt; src-attachments ................................... SUCCESS &lt;span style=&#34;color:#555&#34;&gt;[&lt;/span&gt;6.188s&lt;span style=&#34;color:#555&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#555&#34;&gt;[&lt;/span&gt;INFO&lt;span style=&#34;color:#555&#34;&gt;]&lt;/span&gt; src-moderation .................................... SUCCESS &lt;span style=&#34;color:#555&#34;&gt;[&lt;/span&gt;1.169s&lt;span style=&#34;color:#555&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#555&#34;&gt;[&lt;/span&gt;INFO&lt;span style=&#34;color:#555&#34;&gt;]&lt;/span&gt; src-fossology ..................................... SUCCESS &lt;span style=&#34;color:#555&#34;&gt;[&lt;/span&gt;6.259s&lt;span style=&#34;color:#555&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#555&#34;&gt;[&lt;/span&gt;INFO&lt;span style=&#34;color:#555&#34;&gt;]&lt;/span&gt; backend-svc ....................................... SUCCESS &lt;span style=&#34;color:#555&#34;&gt;[&lt;/span&gt;0.038s&lt;span style=&#34;color:#555&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#555&#34;&gt;[&lt;/span&gt;INFO&lt;span style=&#34;color:#555&#34;&gt;]&lt;/span&gt; svc-licenses ...................................... FAILURE &lt;span style=&#34;color:#555&#34;&gt;[&lt;/span&gt;3.630s&lt;span style=&#34;color:#555&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#555&#34;&gt;[&lt;/span&gt;INFO&lt;span style=&#34;color:#555&#34;&gt;]&lt;/span&gt; svc-users ......................................... SKIPPED
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#555&#34;&gt;[&lt;/span&gt;INFO&lt;span style=&#34;color:#555&#34;&gt;]&lt;/span&gt; svc-vendors ....................................... SKIPPED
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#555&#34;&gt;[&lt;/span&gt;INFO&lt;span style=&#34;color:#555&#34;&gt;]&lt;/span&gt; svc-search ........................................ SKIPPED
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#555&#34;&gt;[&lt;/span&gt;INFO&lt;span style=&#34;color:#555&#34;&gt;]&lt;/span&gt; svc-components .................................... SKIPPED
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#555&#34;&gt;[&lt;/span&gt;INFO&lt;span style=&#34;color:#555&#34;&gt;]&lt;/span&gt; svc-projects ...................................... SKIPPED
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#555&#34;&gt;[&lt;/span&gt;INFO&lt;span style=&#34;color:#555&#34;&gt;]&lt;/span&gt; svc-attachments ................................... SKIPPED
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#555&#34;&gt;[&lt;/span&gt;INFO&lt;span style=&#34;color:#555&#34;&gt;]&lt;/span&gt; svc-moderation .................................... SKIPPED
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#555&#34;&gt;[&lt;/span&gt;INFO&lt;span style=&#34;color:#555&#34;&gt;]&lt;/span&gt; svc-fossology ..................................... SKIPPED
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#555&#34;&gt;[&lt;/span&gt;INFO&lt;span style=&#34;color:#555&#34;&gt;]&lt;/span&gt; backend-utils ..................................... SKIPPED
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#555&#34;&gt;[&lt;/span&gt;INFO&lt;span style=&#34;color:#555&#34;&gt;]&lt;/span&gt; ------------------------------------------------------------------------
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#555&#34;&gt;[&lt;/span&gt;INFO&lt;span style=&#34;color:#555&#34;&gt;]&lt;/span&gt; BUILD FAILURE
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#555&#34;&gt;[&lt;/span&gt;INFO&lt;span style=&#34;color:#555&#34;&gt;]&lt;/span&gt; ------------------------------------------------------------------------
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#555&#34;&gt;[&lt;/span&gt;INFO&lt;span style=&#34;color:#555&#34;&gt;]&lt;/span&gt; Total time: 1:19.836s
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#555&#34;&gt;[&lt;/span&gt;INFO&lt;span style=&#34;color:#555&#34;&gt;]&lt;/span&gt; Finished at: Mon May &lt;span style=&#34;color:#f60&#34;&gt;04&lt;/span&gt; 15:57:46 CEST &lt;span style=&#34;color:#f60&#34;&gt;2015&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#555&#34;&gt;[&lt;/span&gt;INFO&lt;span style=&#34;color:#555&#34;&gt;]&lt;/span&gt; Final Memory: 24M/311M
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#555&#34;&gt;[&lt;/span&gt;INFO&lt;span style=&#34;color:#555&#34;&gt;]&lt;/span&gt; ------------------------------------------------------------------------
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#555&#34;&gt;[&lt;/span&gt;ERROR&lt;span style=&#34;color:#555&#34;&gt;]&lt;/span&gt; Failed to execute goal org.apache.tomcat.maven:tomcat7-maven-plugin:2.2:deploy &lt;span style=&#34;color:#555&#34;&gt;(&lt;/span&gt;default-cli&lt;span style=&#34;color:#555&#34;&gt;)&lt;/span&gt; on project svc-licenses: Cannot invoke Tomcat manager: Broken pipe -&amp;gt; &lt;span style=&#34;color:#555&#34;&gt;[&lt;/span&gt;Help 1&lt;span style=&#34;color:#555&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#555&#34;&gt;[&lt;/span&gt;ERROR&lt;span style=&#34;color:#555&#34;&gt;]&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#555&#34;&gt;[&lt;/span&gt;ERROR&lt;span style=&#34;color:#555&#34;&gt;]&lt;/span&gt; To see the full stack trace of the errors, re-run Maven with the -e switch.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#555&#34;&gt;[&lt;/span&gt;ERROR&lt;span style=&#34;color:#555&#34;&gt;]&lt;/span&gt; Re-run Maven using the -X switch to &lt;span style=&#34;color:#366&#34;&gt;enable&lt;/span&gt; full debug logging.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#555&#34;&gt;[&lt;/span&gt;ERROR&lt;span style=&#34;color:#555&#34;&gt;]&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#555&#34;&gt;[&lt;/span&gt;ERROR&lt;span style=&#34;color:#555&#34;&gt;]&lt;/span&gt; For more information about the errors and possible solutions, please &lt;span style=&#34;color:#366&#34;&gt;read&lt;/span&gt; the following articles:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#555&#34;&gt;[&lt;/span&gt;ERROR&lt;span style=&#34;color:#555&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#555&#34;&gt;[&lt;/span&gt;Help 1&lt;span style=&#34;color:#555&#34;&gt;]&lt;/span&gt; http://cwiki.apache.org/confluence/display/MAVEN/MojoExecutionException
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#555&#34;&gt;[&lt;/span&gt;ERROR&lt;span style=&#34;color:#555&#34;&gt;]&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#555&#34;&gt;[&lt;/span&gt;ERROR&lt;span style=&#34;color:#555&#34;&gt;]&lt;/span&gt; After correcting the problems, you can resume the build with the &lt;span style=&#34;color:#366&#34;&gt;command&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#555&#34;&gt;[&lt;/span&gt;ERROR&lt;span style=&#34;color:#555&#34;&gt;]&lt;/span&gt;   mvn &amp;lt;goals&amp;gt; -rf :svc-licenses
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;voyager:backend sam$
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;One solution is that you deployed already and the tomcat7 plugin does not like to have multiple deploy commands. Instead you will need to issue a &lt;code&gt;mvn tomcat7:redeploy&lt;/code&gt; command.&lt;/p&gt;
&lt;h4 id=&#34;deployment-liferay-not-accessible&#34;&gt;Deployment: liferay not accessible&lt;/h4&gt;
&lt;p&gt;If the virtual machine was shut down and started up again, the backend services and frontend liferay require manual restart. Please contribute a change in the vagrant deployment if you feel that this could be changed. The actual places to call are:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Bash&#34; data-lang=&#34;Bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/opt/apache-tomcat-.../bin/.startup.sh
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/opt/liferay-.../tomcat-.../bin/.startup.sh
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>Docs: Using RequireJS fro Javascript Modules</title>
      <link>https://www.eclipse.org/sw360/docs/development/dev-using-requirejs-for-javascript-modules/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.eclipse.org/sw360/docs/development/dev-using-requirejs-for-javascript-modules/</guid>
      <description>
        
        
        &lt;p&gt;Today most of the javascript code runs in the global namespace. This increases the risk of overwriting symbols in the global namespace due to different libraries and snippets.&lt;/p&gt;
&lt;h1 id=&#34;goal&#34;&gt;Goal&lt;/h1&gt;
&lt;p&gt;We want to use RequireJS (&lt;a href=&#34;http://requirejs.org/&#34;&gt;http://requirejs.org/&lt;/a&gt;) to modularize our code and to have clear namespaces for each component. In addition some of the code may be reused more easily. Other advantages:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;libraries like jquery or datatables can be imported by name but without a specified version&lt;/li&gt;
&lt;li&gt;if necessary, specific versions can be imported for parts of the page&lt;/li&gt;
&lt;li&gt;it is very easy to only load needed dependencies&lt;/li&gt;
&lt;li&gt;good support of webjars due to webjars-locator. Webjars a are automatically accessible through RequireJS.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;how-to-use---example&#34;&gt;How to use - example&lt;/h1&gt;
&lt;p&gt;There is a new jspf-file to be included in jsps to enable RequireJS support:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;%@ include file=&amp;quot;/html/utils/includes/requirejs.jspf&amp;quot; %&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;When RequireJS is enabled with the above include, all libraries can be accessed and code can be scoped:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;require([&#39;jquery&#39;, &#39;module/quickfilter&#39;, &#39;module/confirm&#39;, /* jquery-plugins: */ &#39;datatables&#39;, &#39;jquery-ui&#39;], function($, quickfilter, confirm) {
    // code goes here, libraries can be used through the variables $, quickfilter and confirm
    // Note: jquery-plugins does not have to be bound to variables since they directly register themselves in the jquery object
});
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;NOTE/WARNING&lt;/strong&gt;: since not all code is using RequireJS at the moment it is highly recommended to include RequireJS just before the script tag using it. DO NOT include it at the beginning of the file! Therefore use the following pattern:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;%@ include file=&amp;quot;/html/utils/includes/requirejs.jspf&amp;quot; %&amp;gt;
&amp;lt;script&amp;gt;
    require([&#39;jquery&#39;], function($) {
        // js stuff
    });
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Explanation&lt;/strong&gt;: some the the jQuery-plugins are already module safe. This means the look if something like RequireJS is available and - if this is the case - register themselves as anonymous modules. If someone in some include in the page loads such a plugin via script plugin it may happen that the plugins registers itself twice as an anonymous module which causes errors in RequireJS. Loading RequireJS after all script tags will prevent this and ensure that every plugin is only registered once.&lt;/p&gt;
&lt;h1 id=&#34;migration&#34;&gt;Migration&lt;/h1&gt;
&lt;h2 id=&#34;migrate-a-jsp&#34;&gt;Migrate a JSP&lt;/h2&gt;
&lt;p&gt;To migrate a JSP to use RequireJS the following steps have to be done:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Enable RequireJS support by including &lt;code&gt;requirejs.jspf&lt;/code&gt;. Do it JUST before the script tag with the main code (see NOTE above).&lt;/li&gt;
&lt;li&gt;Enclose the existing code in a &lt;code&gt;require&lt;/code&gt;-function (&lt;strong&gt;Attention:&lt;/strong&gt; Also read &amp;ldquo;Co-existence with AUI().use()&amp;rdquo; below)&lt;/li&gt;
&lt;li&gt;Remove existing &lt;code&gt;script&lt;/code&gt;-tags that loads the javascript files &amp;ldquo;manually&amp;rdquo;&lt;/li&gt;
&lt;li&gt;Rewrite code that access functions inside the new &lt;code&gt;require&lt;/code&gt;-function from outside (e.g. click handlers, see below)&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;co-existence-with-auiuse&#34;&gt;Co-existence with AUI().use()&lt;/h2&gt;
&lt;p&gt;If you need to use AUI().use() in your code, e.g. to grab the PortletURL object, you have to call this function first and call &lt;code&gt;require&lt;/code&gt; inside. Otherwise the code may not be executed correclty if the &amp;lsquo;Drag&amp;amp;Drop&amp;rsquo; error occurs to early during page loading:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;AUI().use(&#39;liferay-portlet-url&#39;, function () {
    require([&#39;jquery&#39;, &#39;module/quickfilter&#39;) {
        // AUI and require modules loaded and available
    });
});
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;migrate-click-handlers&#34;&gt;Migrate click-handlers&lt;/h2&gt;
&lt;p&gt;Since none of the defined functions remains in the global scope click handlers defined in the attributes of a tag would no longer work. Use jQuery to attach a click handler instead:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$(&#39;#exportSpreadsheetButton&#39;).on(&#39;click.components&#39;, exportSpreadsheet)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This click handler is added inside the RequireJS-scope where the function &lt;code&gt;exportSpreadsheet&lt;/code&gt; is defined.
You may also attach handler for distinct elements in each row of a table:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$(&#39;#componentsTable&#39;).on(&#39;click.components&#39;, &#39;img.delete&#39;, function(event) {
     // do stuff
});
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;make-a-module-out-of-a-jspf-include&#34;&gt;Make a module out of a jspf-include&lt;/h2&gt;
&lt;p&gt;There are many jspf-includes which contain html as well as javascript code. They should be converted as followed:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Move the javascript code to an own file. Place it below the &amp;lsquo;html/js&amp;rsquo;-folder, following the same structure as the jspf-file. If the jspf-file is &lt;code&gt;html/components/includes/vendors/addVendor.jspf&lt;/code&gt; place the javascript code in the file &lt;code&gt;js/components/includes/vendors/addVendor.js&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Enclose the code in a define statement to define a new module:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; define(&#39;components/includes/vendors/addVendor&#39;, [ /* dependencies */ ], function() {
     // define module code
 });
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;In order to use the new module include the jspf-file and load the js-code via RequireJS:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;%@ include &amp;quot;html/components/includes/vendors/addVendor.jspf&amp;quot; %&amp;gt;
    
require([&#39;components/includes/vendors/addVendor&#39;], function(addVendor) {
    // use addVendor
});
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;make-a-module-out-of-a-javascript-file-or-function&#34;&gt;Make a module out of a javascript file or function&lt;/h2&gt;
&lt;p&gt;There are several javascript files and functions below `/html/js&amp;rsquo;. They can be make compatible to RequireJS as follows:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Create a new file inside &lt;code&gt;/html/js/component&lt;/code&gt; with a proper name that describes the functionality for the new component&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Define the module and point to the legacy function, e.g.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; define(&#39;module/confirm&#39;, [&#39;jquery&#39;, /* jquery-plugins: */ &#39;jquery-confirm&#39;, /* legacy code */ &#39;main&#39; ], function($) {
     return {
         confirmDeletion: deleteConfirmed /* pointer to legacy method in main.js */
     };
 });
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Afterwards the module can be loaded using the name &lt;code&gt;component/confirm&lt;/code&gt;, e.g.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; require([&#39;module/confirm&#39;], function(confirm) {
     confirm.confirmDeletion(/*...*/);
 });
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; The legacy function should be moved inside the module as soon as the function is no longer accessed directly but via RequireJS only.
&lt;strong&gt;Note&lt;/strong&gt; You can also require legacy javascript files if you need them as dependency as pointed out in the examples above.&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
