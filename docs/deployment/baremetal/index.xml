<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Eclipse SW360 â€“ Bare Metal</title><link>https://www.eclipse.org/sw360/docs/deployment/baremetal/</link><description>Recent content in Bare Metal on Eclipse SW360</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://www.eclipse.org/sw360/docs/deployment/baremetal/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: Ubuntu 22.04 / Debian 11</title><link>https://www.eclipse.org/sw360/docs/deployment/baremetal/deploy-natively/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.eclipse.org/sw360/docs/deployment/baremetal/deploy-natively/</guid><description>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>We are covering the update for Debian based Linux distros, because that is our main / agreed base system for running sw360. sw360 may run on a varienty of other linux distributions or OSes such as Mac OSX (amd64 only).&lt;/p>
&lt;h2 id="requirements">Requirements&lt;/h2>
&lt;p>The installation consists of quite some tasks, as an overview:&lt;/p>
&lt;ul>
&lt;li>Java 11&lt;/li>
&lt;li>Postgresql &amp;gt;= 15.x&lt;/li>
&lt;li>CouchDB &amp;gt;= 3.2.x&lt;/li>
&lt;li>Thrift 0.18.1&lt;/li>
&lt;li>Liferay CE 7.4.3 GA18&lt;/li>
&lt;/ul>
&lt;h2 id="initial-steps">Initial steps&lt;/h2>
&lt;p>In order to &amp;ldquo;calibrate the system&amp;rdquo; just run the update / upgrade cycle once:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>sudo apt update
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo apt upgrade
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="postgresql">PostgreSQL&lt;/h2>
&lt;p>You can go ahead install postgresql:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo apt install postgresql
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>or whatever package version is suitable here, for example version 12 for ubuntu 20.04.&lt;/p>
&lt;p>The configuration for Liferay will come later.&lt;/p>
&lt;h2 id="couchdb">CouchDB&lt;/h2>
&lt;p>CouchDB is not part of the Ubuntu package management anymore. Thus, you need to add the Apache CouchDB package repository to install it, first the key for signing:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>apt install curl gpg
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>curl https://couchdb.apache.org/repo/keys.asc | sudo gpg --dearmor -o /etc/apt/trusted.gpg.d/couchdb-archive-keyring.gpg
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#366">echo&lt;/span> &lt;span style="color:#c30">&amp;#34;deb https://apache.jfrog.io/artifactory/couchdb-deb/ &lt;/span>&lt;span style="color:#069;font-weight:bold">$(&lt;/span>awk -F&lt;span style="color:#555">=&lt;/span> &lt;span style="color:#c30">&amp;#39;/^VERSION_CODENAME/{print$2}&amp;#39;&lt;/span> /etc/os-release&lt;span style="color:#069;font-weight:bold">)&lt;/span>&lt;span style="color:#c30"> main&amp;#34;&lt;/span> | sudo tee /etc/apt/sources.list.d/couchdb.list &amp;gt;/dev/null
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo apt-get update -y
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo apt-get install -y couchdb
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The installer will ask a couple of questions:&lt;/p>
&lt;ol>
&lt;li>Bind address: for CouchDB and SW360 &lt;code>127.0.0.1&lt;/code> (localhost) is a good bind address, if you would like to access the server from a remote computer because your sw360 runs as a server in the network, you would need to change accordingly.&lt;/li>
&lt;li>Unless you know what you are doing, use standalone install intead of clustered option, for a regular single instalation.&lt;/li>
&lt;li>Admin user: For fresh installation for sure a very good idea. You can set the password at sw360 for CouchDB in &lt;code>couchdb.properties&lt;/code> and place it centrally in &lt;code>/etc/sw360&lt;/code>&lt;/li>
&lt;/ol>
&lt;p>In case you added an admin accidentally and would like to remove it,&lt;/p>
&lt;h2 id="thrift">Thrift&lt;/h2>
&lt;p>For thrift, the helper install script is located on sw360 &lt;code>scripts/install-thrift.sh&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo ./install-thrift.sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>In case there is thrift in the package management of the OS you re running on, just make sure, you have version 0.16&lt;/p>
&lt;h2 id="java-11">Java 11&lt;/h2>
&lt;p>If you do not have installed java 11 yet on your setup:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>curl https://packages.adoptium.net/artifactory/api/gpg/key/public | sudo tee /etc/apt/trusted.gpg.d/apache-temurin.gpg &amp;gt;/dev/null
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#366">echo&lt;/span> &lt;span style="color:#c30">&amp;#34;deb https://packages.adoptium.net/artifactory/deb &lt;/span>&lt;span style="color:#069;font-weight:bold">$(&lt;/span>awk -F&lt;span style="color:#555">=&lt;/span> &lt;span style="color:#c30">&amp;#39;/^VERSION_CODENAME/{print$2}&amp;#39;&lt;/span> /etc/os-release&lt;span style="color:#069;font-weight:bold">)&lt;/span>&lt;span style="color:#c30"> main&amp;#34;&lt;/span> | sudo tee /etc/apt/sources.list.d/adoptium.gpg
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="dependencies">Dependencies&lt;/h2>
&lt;p>Use the included script located in:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>./scripts/download_dependencies.sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Required dependencies will be downloaded on the deps folder.&lt;/p>
&lt;p>For liferay, unpack it, ideally in the &lt;code>/opt&lt;/code> directory.&lt;/p>
&lt;h2 id="install-couchdb-lucene">Install Couchdb Lucene&lt;/h2>
&lt;p>SW360 uses for searching the contents of the couchdb databases a lucene-based server named couchdb-lucene. The main issue here is that it requires a patch for the use in the normal SW3360 setups. The reason for the patch is that the developers presume that couchdb-lucene runs as the only component in the application server, while in the sw360 setup, there is a setup in which couchdb-lucene runs along with other components in the same application container.&lt;/p>
&lt;p>For build the custom CLucene jar:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#099">#!/bin/bash
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#099">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#033">CLUCENE_VERSION&lt;/span>&lt;span style="color:#555">=&lt;/span>2.1.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mkdir /tmp/build
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>curl -JL https://github.com/rnewson/couchdb-lucene/archive/v&lt;span style="color:#c30">&amp;#34;&lt;/span>&lt;span style="color:#033">$CLUCENE_VERSION&lt;/span>&lt;span style="color:#c30">&amp;#34;&lt;/span>.tar.gz | tar -C /tmp/build -xz --strip-components&lt;span style="color:#555">=&lt;/span>&lt;span style="color:#f60">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cp ./scripts/patches/couchdb-lucene.patch /tmp/build
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cp ./scripts/docker/couchdb-lucene.ini /tmp/build/src/main/resources/couchdb-lucene.ini
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#366">cd&lt;/span> /tmp/build &lt;span style="color:#555">||&lt;/span> &lt;span style="color:#366">exit&lt;/span> &lt;span style="color:#f60">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>patch -p1 &amp;lt; couchdb-lucene.patch &lt;span style="color:#c30;font-weight:bold">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c30;font-weight:bold">&lt;/span>mvn -X install war:war &lt;span style="color:#c30;font-weight:bold">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c30;font-weight:bold">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#09f;font-style:italic">## Deploy New SW360&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Build with:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c30">```&lt;/span>bash
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mvn clean package -P deploy -Dbase.deploy.dir&lt;span style="color:#555">=&lt;/span>. -Dliferay.deploy.dir&lt;span style="color:#555">=&lt;/span>/opt/liferay-ce-portal-7.4.3-ga18/deploy/ &lt;span style="color:#c30;font-weight:bold">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c30;font-weight:bold">&lt;/span> -Dbackend.deploy.dir&lt;span style="color:#555">=&lt;/span>/opt/liferay-ce-portal-7.4.3-ga18/tomcat-9.0.33/webapps/ -Drest.deploy.dir&lt;span style="color:#555">=&lt;/span>/opt/liferay-ce-portal-7.4.18-ga4/tomcat-9.0.33/webapps/ -DskipTests
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Skipping tests has the reason that usually, the sw360 is tested in the CI and thus, local tests are note necessary, if the code has not been changed locally. Note that the REST API documentation framework is based on building test cases and thus for deploying a version with REST API documentation, tests should be executed:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#366">cd&lt;/span> rest
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mvn clean package -P deploy -Dbase.deploy.dir&lt;span style="color:#555">=&lt;/span>. -Dliferay.deploy.dir&lt;span style="color:#555">=&lt;/span>/opt/liferay-ce-portal-7.4.3-ga18/deploy/ -Dbackend.deploy.dir&lt;span style="color:#555">=&lt;/span>/opt/liferay-ce-portal-7.4.3-ga18/tomcat-9.0.33/webapps/ -Drest.deploy.dir&lt;span style="color:#555">=&lt;/span>/opt/liferay-ce-portal-7.3.3-ga4/tomcat-9.0.33/webapps/
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="final-steps-in-liferay">Final Steps in Liferay&lt;/h2>
&lt;p>Liferay CE 7.3 will need to have some manual steps applied in order to complete the setup. Unfortunately, these cannot be automated (if you know how, please let us know). For earlier versions of Liferay, please refer to the main wiki page.&lt;/p>
&lt;p>This is the legacy guide for Liferay CE 7.3.3 but is valid for current 7.4.3 deployment:&lt;/p>
&lt;p>&lt;a href="https://www.eclipse.org/sw360/docs/deployment/legacy/deploy-liferay7.3/">https://www.eclipse.org/sw360/docs/deployment/legacy/deploy-liferay7.3/&lt;/a>&lt;/p></description></item><item><title>Docs: Version 19.x on Debian 12</title><link>https://www.eclipse.org/sw360/docs/deployment/baremetal/deploy-19-natively/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.eclipse.org/sw360/docs/deployment/baremetal/deploy-19-natively/</guid><description>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>We are covering the installation for Debian based Linux distros. sw360 may run
on a variety of other linux distributions or OSes such as Mac OSX (amd64 only).&lt;/p>
&lt;p>This is a guide with detailed explanation of how to install and run SW360
natively on you local machine. It includes installation of all dependencies
manually, and will not use docker or other container system during the
installation or run.&lt;/p>
&lt;h2 id="requirements">Requirements&lt;/h2>
&lt;p>The installation consists of quite some tasks, as an overview:&lt;/p>
&lt;ul>
&lt;li>Java 21&lt;/li>
&lt;li>Maven &amp;gt;= 3.5.0&lt;/li>
&lt;li>Tomcat 11.0&lt;/li>
&lt;li>Postgresql &amp;gt;= 16&lt;/li>
&lt;li>CouchDB &amp;gt;= 3.4.x&lt;/li>
&lt;li>Thrift 0.20.0&lt;/li>
&lt;li>NodeJS &amp;gt;= 20.x&lt;/li>
&lt;li>pnpm&lt;/li>
&lt;/ul>
&lt;h2 id="initial-steps">Initial steps&lt;/h2>
&lt;p>In order to &amp;ldquo;calibrate the system&amp;rdquo; just run the update / upgrade cycle once:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>sudo apt update
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo apt upgrade
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="1-installing-backend-services">1. Installing backend services&lt;/h2>
&lt;h3 id="11-couchdb">1.1. CouchDB&lt;/h3>
&lt;p>CouchDB manages their own package repository, and we will be using it to get
latest packages for installation.&lt;/p>
&lt;p>Starting with adding keys and sources to APT and installing the couchdb and the
couchdb-nouveau (full-text search engine) packages.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>apt install curl gnupg2 apt-transport-https lsb-release
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>curl &lt;span style="color:#c30">&amp;#39;https://couchdb.apache.org/repo/keys.asc&amp;#39;&lt;/span> | gpg2 --dearmor | sudo tee /etc/apt/trusted.gpg.d/couchdb-archive-keyring.gpg &amp;gt;/dev/null 2&amp;gt;&amp;amp;&lt;span style="color:#f60">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo chown root:root /etc/apt/trusted.gpg.d/couchdb-archive-keyring.gpg
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo chmod &lt;span style="color:#f60">0644&lt;/span> /etc/apt/trusted.gpg.d/couchdb-archive-keyring.gpg
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#366">echo&lt;/span> &lt;span style="color:#c30">&amp;#34;deb [signed-by=/etc/apt/trusted.gpg.d/couchdb-archive-keyring.gpg] https://apache.jfrog.io/artifactory/couchdb-deb/ &lt;/span>&lt;span style="color:#069;font-weight:bold">$(&lt;/span>lsb_release -cs&lt;span style="color:#069;font-weight:bold">)&lt;/span>&lt;span style="color:#c30"> main&amp;#34;&lt;/span> | sudo tee /etc/apt/sources.list.d/couchdb.list
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo chmod &lt;span style="color:#f60">0644&lt;/span> /etc/apt/sources.list.d/couchdb.list
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo apt-get update -y
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo apt-get install -y couchdb couchdb-nouveau
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The installer will ask a couple of questions:&lt;/p>
&lt;ol>
&lt;li>Bind address: for CouchDB and SW360 &lt;code>127.0.0.1&lt;/code> (localhost) is a good bind
address, if you would like to access the server from a remote computer
because your sw360 runs as a server in the network, you would need to change
accordingly.&lt;/li>
&lt;li>Unless you know what you are doing, use standalone installation instead of
clustered option, for a regular single installation.&lt;/li>
&lt;li>Enable Nouveau in CouchDB (if installed)?: We want to enable it so SW360 can
use it for search interface. Later, it can be customized to change index
storage location, if needed.&lt;/li>
&lt;li>Admin user: For fresh installation for sure a very good idea. You can set the
password at sw360 for CouchDB in &lt;code>couchdb.properties&lt;/code> and place it centrally
in &lt;code>/etc/sw360&lt;/code>.&lt;/li>
&lt;/ol>
&lt;h3 id="12-java-21">1.2. Java 21&lt;/h3>
&lt;p>If you do not have installed java 21 yet on your setup:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>curl &lt;span style="color:#c30">&amp;#39;https://packages.adoptium.net/artifactory/api/gpg/key/public&amp;#39;&lt;/span> | gpg2 --dearmor | sudo tee /etc/apt/trusted.gpg.d/apache-temurin.gpg &amp;gt;/dev/null 2&amp;gt;&amp;amp;&lt;span style="color:#f60">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo chown root:root /etc/apt/trusted.gpg.d/apache-temurin.gpg
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo chmod &lt;span style="color:#f60">0644&lt;/span> /etc/apt/trusted.gpg.d/apache-temurin.gpg
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#366">echo&lt;/span> &lt;span style="color:#c30">&amp;#34;deb [signed-by=/etc/apt/trusted.gpg.d/apache-temurin.gpg] https://packages.adoptium.net/artifactory/deb &lt;/span>&lt;span style="color:#069;font-weight:bold">$(&lt;/span>lsb_release -cs&lt;span style="color:#069;font-weight:bold">)&lt;/span>&lt;span style="color:#c30"> main&amp;#34;&lt;/span> | sudo tee /etc/apt/sources.list.d/adoptium.list
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo chmod &lt;span style="color:#f60">0644&lt;/span> /etc/apt/sources.list.d/adoptium.list
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo apt-get update -y
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo apt-get install -y temurin-21-jdk
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="13-thrift">1.3. Thrift&lt;/h3>
&lt;p>For thrift, the helper install script is located on sw360 &lt;code>scripts/install-thrift.sh&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo ./scripts/install-thrift.sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>In case there is thrift in the package management of the OS you are running on,
just make sure, you have version 0.20&lt;/p>
&lt;h3 id="14-maven">1.4. Maven&lt;/h3>
&lt;p>If your OS has maven version 3.5.0 or above, you can simply go and install it.&lt;/p>
&lt;p>Otherwise, you can install maven manually:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>curl -L &lt;span style="color:#c30">&amp;#39;https://dlcdn.apache.org/maven/maven-3/3.9.9/binaries/apache-maven-3.9.9-bin.tar.gz&amp;#39;&lt;/span> -o ~/Downloads/maven-3.9.9.tar.gz
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo tar -xzvf ~/Downloads/maven-3.9.9.tar.gz -C /opt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo find /opt/apache-maven-3.9.9/ -type d -exec chmod &lt;span style="color:#f60">755&lt;/span> &lt;span style="color:#555">{}&lt;/span> &lt;span style="color:#c30;font-weight:bold">\;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo update-alternatives --install /usr/bin/mvn mvn /opt/apache-maven-3.9.9/bin/mvn &lt;span style="color:#f60">399&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#366">printf&lt;/span> &lt;span style="color:#c30">&amp;#39;export M2_HOME=/opt/apache-maven-3.9.9\nexport PATH=${M2_HOME}/bin:${PATH}&amp;#39;&lt;/span> | sudo tee /etc/profile.d/maven.sh
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo chmod &lt;span style="color:#f60">0644&lt;/span> /etc/profile.d/maven.sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="15-install-apache-tomcat-11">1.5. Install Apache Tomcat 11&lt;/h3>
&lt;p>Get the latest version of Apache Tomcat 11 from &lt;a href="https://tomcat.apache.org/download-11.cgi">https://tomcat.apache.org/download-11.cgi&lt;/a>
and install it in &lt;code>/opt&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>curl -L &lt;span style="color:#c30">&amp;#39;https://dlcdn.apache.org/tomcat/tomcat-11/v11.0.4/bin/apache-tomcat-11.0.4.tar.gz&amp;#39;&lt;/span> -o ~/Downloads/tomcat-11.0.4.tar.gz
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo tar -xzvf ~/Downloads/tomcat-11.0.4.tar.gz -C /opt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo chown -R &lt;span style="color:#033">$USER&lt;/span>:&lt;span style="color:#033">$USER&lt;/span> /opt/apache-tomcat-11.0.4/
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="16-install-keycloak-optional">1.6. Install KeyCloak (optional)&lt;/h3>
&lt;p>You can configure KeyCloak with SW360 for IAM. SW360 on its own can do
authentication and authorization, but for corporate setup, you might want to
offload to KeyCloak. Thus, this step is optional.&lt;/p>
&lt;p>Get the latest 26.x.x version from &lt;a href="https://www.keycloak.org/downloads">https://www.keycloak.org/downloads&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>curl -L &lt;span style="color:#c30">&amp;#39;https://github.com/keycloak/keycloak/releases/download/26.1.3/keycloak-26.1.3.tar.gz&amp;#39;&lt;/span> -o ~/Downloads/keycloak-26.1.3.tar.gz
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo tar -xzvf ~/Downloads/keycloak-26.1.3.tar.gz -C /opt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo chown -R &lt;span style="color:#033">$USER&lt;/span>:&lt;span style="color:#033">$USER&lt;/span> /opt/keycloak-26.1.3/
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Install PostgreSQL used by KeyCloak for management.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo apt install postgresql
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>or whatever package version is suitable here, for example version 15 for Debian 12.&lt;/p>
&lt;p>Follow the &lt;a href="../Deploy-Keycloak-Authentication.md">Keycloak based authentication&lt;/a>
guide to set up KeyCloak for SW360 after the installation from 1.8 is done.&lt;/p>
&lt;h3 id="17-clone-and-build-sw360-version-19x">1.7. Clone and build sw360 version 19.x&lt;/h3>
&lt;ul>
&lt;li>Clone sw360 source code to folder
&lt;ul>
&lt;li>&lt;code>$ git clone https://github.com/eclipse-sw360/sw360.git&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Create config properties
&lt;ul>
&lt;li>&lt;code>$ sudo mkdir -p /etc/sw360 /etc/sw360/autorization /etc/sw360/rest&lt;/code>&lt;/li>
&lt;li>Find the relevant configurations at &lt;a href="../Deploy-Configuration-Files.md">Configurable Property Keys&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Compile and install the application
&lt;ul>
&lt;li>&lt;code>$ mvn clean install -Dbase.deploy.dir=/opt/apache-tomcat-11.0.4/ -Dlistener.deploy.dir=/opt/keycloak-26.1.3/providers -P deploy&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>This will install the jar and war files at appropriate locations.&lt;/p>
&lt;h3 id="18-start-backend-service">1.8. Start backend service&lt;/h3>
&lt;ul>
&lt;li>Start tomcat server
&lt;ul>
&lt;li>&lt;code>$ /opt/apache-tomcat-11.0.4/bin/startup.sh&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Check tomcat logs
&lt;ul>
&lt;li>&lt;code>$ tail -f100 /opt/apache-tomcat-11.0.4/logs/catalina.out&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>Once you see message like
&lt;code>org.apache.catalina.startup.Catalina.start Server startup in [**] milliseconds&lt;/code>
in the logs, the backend is up and can load the OpenAPI docs at
&lt;a href="http://localhost:8080/resource/v3/api-docs">http://localhost:8080/resource/v3/api-docs&lt;/a>&lt;/p>
&lt;p>The backend install SwaggerUI as well and accessible via
&lt;a href="http://localhost:8080/resource/swagger-ui/index.html">http://localhost:8080/resource/swagger-ui/index.html&lt;/a>&lt;/p>
&lt;h2 id="2-installing-frontend-services">2. Installing frontend services&lt;/h2>
&lt;p>Since version 19, SW360 has separated the front-end as a React based project.
It is hosted at &lt;a href="https://github.com/eclipse-sw360/sw360-frontend/">https://github.com/eclipse-sw360/sw360-frontend/&lt;/a> and needs to be
installed as well.&lt;/p>
&lt;h3 id="21-install-node-20">2.1. Install node 20&lt;/h3>
&lt;p>First we need to install Node and NPM version 20 or above. Setting nvm is the
easiest and fastest way to do it for your user. Follow the guide from
&lt;a href="https://github.com/nvm-sh/nvm?tab=readme-ov-file#installing-and-updating">https://github.com/nvm-sh/nvm?tab=readme-ov-file#installing-and-updating&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh | bash
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#366">source&lt;/span> ~/.bashrc
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>nvm install &lt;span style="color:#f60">20&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="22-install-pnpm">2.2. Install pnpm&lt;/h3>
&lt;p>pnpm is an advanced package manager for node dependencies and can be installed
with the new npm installed above.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>npm install -g pnpm@latest-10
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="23-clone-and-install-frontend">2.3. Clone and install frontend&lt;/h3>
&lt;ul>
&lt;li>Clone sw360 source code to folder
&lt;ul>
&lt;li>&lt;code>$ git clone https://github.com/eclipse-sw360/sw360-frontend.git&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Setup &lt;code>.env&lt;/code> file
&lt;ul>
&lt;li>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-ini" data-lang="ini">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#309">NEXTAUTH_SECRET&lt;/span>&lt;span style="color:#555">=&lt;/span>&lt;span style="color:#c30">&amp;#39;secret&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#309">NEXT_PUBLIC_SW360_API_URL&lt;/span>&lt;span style="color:#555">=&lt;/span>&lt;span style="color:#c30">&amp;#39;http://localhost:8080&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#309">NEXTAUTH_URL&lt;/span>&lt;span style="color:#555">=&lt;/span>&lt;span style="color:#c30">&amp;#39;http://localhost:3000&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#09f;font-style:italic"># possible values are sw360basic, sw360oauth, keycloak&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#309">NEXT_PUBLIC_SW360_AUTH_PROVIDER&lt;/span>&lt;span style="color:#555">=&lt;/span>&lt;span style="color:#c30">&amp;#39;sw360basic&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#09f;font-style:italic"># Enable if using KeyCloak&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#09f;font-style:italic">#SW360_KEYCLOAK_CLIENT_ID=&amp;#39;client-from-kc&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#09f;font-style:italic">#SW360_KEYCLOAK_CLIENT_SECRET=&amp;#39;secret-from-kc&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#09f;font-style:italic">#AUTH_ISSUER=&amp;#39;http://localhost:8083/realms/sw360&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#09f;font-style:italic">#NEXT_PUBLIC_SW360_AUTH_PROVIDER=&amp;#39;keycloak&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Install dependencies and build pages
&lt;ul>
&lt;li>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>$ pnpm install
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ pnpm build
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Start the server and visit &lt;a href="http://localhost:3000">http://localhost:3000&lt;/a>
&lt;ul>
&lt;li>&lt;code>$ pnpm start&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul></description></item></channel></rss>